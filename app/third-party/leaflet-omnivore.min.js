




<!DOCTYPE html>
<html class="   ">
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    
    
    <title>leaflet-omnivore/leaflet-omnivore.min.js at master Â· mapbox/leaflet-omnivore</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png" />
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png" />
    <meta property="fb:app_id" content="1401488693436528"/>

      <meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="mapbox/leaflet-omnivore" name="twitter:title" /><meta content="leaflet-omnivore - universal format parser for Leaflet &amp;amp; Mapbox.js" name="twitter:description" /><meta content="https://avatars2.githubusercontent.com/u/600935?s=400" name="twitter:image:src" />
<meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="https://avatars2.githubusercontent.com/u/600935?s=400" property="og:image" /><meta content="mapbox/leaflet-omnivore" property="og:title" /><meta content="https://github.com/mapbox/leaflet-omnivore" property="og:url" /><meta content="leaflet-omnivore - universal format parser for Leaflet &amp; Mapbox.js" property="og:description" />

    <link rel="assets" href="https://github.global.ssl.fastly.net/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035/">
    <link rel="xhr-socket" href="/_sockets" />

    <meta name="msapplication-TileImage" content="/windows-tile.png" />
    <meta name="msapplication-TileColor" content="#ffffff" />
    <meta name="selected-link" value="repo_source" data-pjax-transient />
    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="421E0DAB:4A39:DCC0AF:535741E3" name="octolytics-dimension-request_id" /><meta content="648315" name="octolytics-actor-id" /><meta content="hydrojumbo" name="octolytics-actor-login" /><meta content="7ff0cb2c37a666383557a8b182f0426b16d0b5aa6e5e4122f714ad35016f1c74" name="octolytics-actor-hash" />
    

    
    
    <link rel="icon" type="image/x-icon" href="https://github.global.ssl.fastly.net/favicon.ico" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="cCnt+Wc+Yy7VZ1j2aNr/v/KX85eZnOQZh0NiQLqKKSYP9SUsmVDE4yuuaPZxqnNLOz+lV57Kc8qJO5CGoPNI8Q==" name="csrf-token" />

    <link href="https://github.global.ssl.fastly.net/assets/github-368aa676828c837fd3f1045a8dade3500e017f98.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://github.global.ssl.fastly.net/assets/github2-5761fb780f2d55645cebfad8f1ef8da6e683b729.css" media="all" rel="stylesheet" type="text/css" />
    


        <script crossorigin="anonymous" src="https://github.global.ssl.fastly.net/assets/frameworks-f8f8d8ee1afb4365ba5e002fdbc3c8e61738713b.js" type="text/javascript"></script>
        <script async="async" crossorigin="anonymous" src="https://github.global.ssl.fastly.net/assets/github-c54ebd8427b01d66b099943dc8b805ae4e500250.js" type="text/javascript"></script>
        
        
      <meta http-equiv="x-pjax-version" content="c9243975cb7db64f112e865fe1ed3320">

        <link data-pjax-transient rel='permalink' href='/mapbox/leaflet-omnivore/blob/4c1271f252fedea80b22cebf4357e588cea7f009/leaflet-omnivore.min.js'>

  <meta name="description" content="leaflet-omnivore - universal format parser for Leaflet &amp; Mapbox.js" />

  <meta content="600935" name="octolytics-dimension-user_id" /><meta content="mapbox" name="octolytics-dimension-user_login" /><meta content="16520801" name="octolytics-dimension-repository_id" /><meta content="mapbox/leaflet-omnivore" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="16520801" name="octolytics-dimension-repository_network_root_id" /><meta content="mapbox/leaflet-omnivore" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/mapbox/leaflet-omnivore/commits/master.atom" rel="alternate" title="Recent Commits to leaflet-omnivore:master" type="application/atom+xml" />

  </head>


  <body class="logged_in  env-production windows vis-public page-blob">
    <a href="#start-of-content" tabindex="1" class="accessibility-aid js-skip-to-content">Skip to content</a>
    <div class="wrapper">
      
      
      
      


      <div class="header header-logged-in true">
  <div class="container clearfix">

    <a class="header-logo-invertocat" href="https://github.com/">
  <span class="mega-octicon octicon-mark-github"></span>
</a>

    
    <a href="/notifications" aria-label="You have no unread notifications" class="notification-indicator tooltipped tooltipped-s" data-gotokey="n">
        <span class="mail-status all-read"></span>
</a>

      <div class="command-bar js-command-bar  in-repository">
          <form accept-charset="UTF-8" action="/search" class="command-bar-form" id="top_search_form" method="get">

<div class="commandbar">
  <span class="message"></span>
  <input type="text" data-hotkey="/ s" name="q" id="js-command-bar-field" placeholder="Search or type a command" tabindex="1" autocapitalize="off"
    
    data-username="hydrojumbo"
      data-repo="mapbox/leaflet-omnivore"
      data-branch="master"
      data-sha="700bbeebc7d302871de73708adf6b141db17fdeb"
  >
  <div class="display hidden"></div>
</div>

    <input type="hidden" name="nwo" value="mapbox/leaflet-omnivore" />

    <div class="select-menu js-menu-container js-select-menu search-context-select-menu">
      <span class="minibutton select-menu-button js-menu-target" role="button" aria-haspopup="true">
        <span class="js-select-button">This repository</span>
      </span>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container" aria-hidden="true">
        <div class="select-menu-modal">

          <div class="select-menu-item js-navigation-item js-this-repository-navigation-item selected">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" class="js-search-this-repository" name="search_target" value="repository" checked="checked" />
            <div class="select-menu-item-text js-select-button-text">This repository</div>
          </div> <!-- /.select-menu-item -->

          <div class="select-menu-item js-navigation-item js-all-repositories-navigation-item">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" name="search_target" value="global" />
            <div class="select-menu-item-text js-select-button-text">All repositories</div>
          </div> <!-- /.select-menu-item -->

        </div>
      </div>
    </div>

  <span class="help tooltipped tooltipped-s" aria-label="Show command bar help">
    <span class="octicon octicon-question"></span>
  </span>


  <input type="hidden" name="ref" value="cmdform">

</form>
        <ul class="top-nav">
          <li class="explore"><a href="/explore">Explore</a></li>
            <li><a href="https://gist.github.com">Gist</a></li>
            <li><a href="/blog">Blog</a></li>
          <li><a href="https://help.github.com">Help</a></li>
        </ul>
      </div>

    


  <ul id="user-links">
    <li>
      <a href="/hydrojumbo" class="name">
        <img alt="Alex Bedig" class=" js-avatar" data-user="648315" height="20" src="https://avatars0.githubusercontent.com/u/648315?s=140" width="20" /> hydrojumbo
      </a>
    </li>

    <li class="new-menu dropdown-toggle js-menu-container">
      <a href="#" class="js-menu-target tooltipped tooltipped-s" aria-label="Create new...">
        <span class="octicon octicon-plus"></span>
        <span class="dropdown-arrow"></span>
      </a>

      <div class="new-menu-content js-menu-content">
      </div>
    </li>

    <li>
      <a href="/settings/profile" id="account_settings"
        class="tooltipped tooltipped-s"
        aria-label="Account settings ">
        <span class="octicon octicon-tools"></span>
      </a>
    </li>
    <li>
      <form class="logout-form" action="/logout" method="post">
        <button class="sign-out-button tooltipped tooltipped-s" aria-label="Sign out">
          <span class="octicon octicon-log-out"></span>
        </button>
      </form>
    </li>

  </ul>

<div class="js-new-dropdown-contents hidden">
  

<ul class="dropdown-menu">
  <li>
    <a href="/new"><span class="octicon octicon-repo-create"></span> New repository</a>
  </li>
  <li>
    <a href="/organizations/new"><span class="octicon octicon-organization"></span> New organization</a>
  </li>


    <li class="section-title">
      <span title="mapbox/leaflet-omnivore">This repository</span>
    </li>
      <li>
        <a href="/mapbox/leaflet-omnivore/issues/new"><span class="octicon octicon-issue-opened"></span> New issue</a>
      </li>
</ul>

</div>


    
  </div>
</div>

      

        



      <div id="start-of-content" class="accessibility-aid"></div>
          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    <div id="js-flash-container">
      
    </div>
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        

<ul class="pagehead-actions">

    <li class="subscription">
      <form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="Dut6HAPnyCXo4Z0rD1QuNocuyqJlcsYxyviwLe5W35QXlAvKwCN7weOfjHLxReziNPjFEU/X3PrXTt9L9IZR8w==" /></div>  <input id="repository_id" name="repository_id" type="hidden" value="16520801" />

    <div class="select-menu js-menu-container js-select-menu">
      <a class="social-count js-social-count" href="/mapbox/leaflet-omnivore/watchers">
        45
      </a>
      <span class="minibutton select-menu-button with-count js-menu-target" role="button" tabindex="0" aria-haspopup="true">
        <span class="js-select-button">
          <span class="octicon octicon-eye-watch"></span>
          Watch
        </span>
      </span>

      <div class="select-menu-modal-holder">
        <div class="select-menu-modal subscription-menu-modal js-menu-content" aria-hidden="true">
          <div class="select-menu-header">
            <span class="select-menu-title">Notification status</span>
            <span class="octicon octicon-remove-close js-menu-close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-list js-navigation-container" role="menu">

            <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                <h4>Not watching</h4>
                <span class="description">You only receive notifications for conversations in which you participate or are @mentioned.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye-watch"></span>
                  Watch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                <h4>Watching</h4>
                <span class="description">You receive notifications for all conversations in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye-unwatch"></span>
                  Unwatch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_ignore" name="do" type="radio" value="ignore" />
                <h4>Ignoring</h4>
                <span class="description">You do not receive any notifications for conversations in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-mute"></span>
                  Stop ignoring
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

</form>
    </li>

  <li>
  

  <div class="js-toggler-container js-social-container starring-container ">
    <a href="/mapbox/leaflet-omnivore/unstar"
      class="minibutton with-count js-toggler-target star-button starred"
      aria-label="Unstar this repository" title="Unstar mapbox/leaflet-omnivore" data-remote="true" data-method="post" rel="nofollow">
      <span class="octicon octicon-star-delete"></span><span class="text">Unstar</span>
    </a>

    <a href="/mapbox/leaflet-omnivore/star"
      class="minibutton with-count js-toggler-target star-button unstarred"
      aria-label="Star this repository" title="Star mapbox/leaflet-omnivore" data-remote="true" data-method="post" rel="nofollow">
      <span class="octicon octicon-star"></span><span class="text">Star</span>
    </a>

      <a class="social-count js-social-count" href="/mapbox/leaflet-omnivore/stargazers">
        78
      </a>
  </div>

  </li>


        <li>
          <a href="/mapbox/leaflet-omnivore/fork" class="minibutton with-count js-toggler-target fork-button lighter tooltipped-n" title="Fork your own copy of mapbox/leaflet-omnivore to your account" aria-label="Fork your own copy of mapbox/leaflet-omnivore to your account" rel="facebox nofollow">
            <span class="octicon octicon-git-branch-create"></span><span class="text">Fork</span>
          </a>
          <a href="/mapbox/leaflet-omnivore/network" class="social-count">12</a>
        </li>


</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="repo-label"><span>public</span></span>
          <span class="mega-octicon octicon-repo"></span>
          <span class="author"><a href="/mapbox" class="url fn" itemprop="url" rel="author"><span itemprop="title">mapbox</span></a></span><!--
       --><span class="path-divider">/</span><!--
       --><strong><a href="/mapbox/leaflet-omnivore" class="js-current-repository js-repo-home-link">leaflet-omnivore</a></strong>

          <span class="page-context-loader">
            <img alt="Octocat-spinner-32" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">
      <div class="repository-with-sidebar repo-container new-discussion-timeline js-new-discussion-timeline  ">
        <div class="repository-sidebar clearfix">
            

<div class="sunken-menu vertical-right repo-nav js-repo-nav js-repository-container-pjax js-octicon-loaders">
  <div class="sunken-menu-contents">
    <ul class="sunken-menu-group">
      <li class="tooltipped tooltipped-w" aria-label="Code">
        <a href="/mapbox/leaflet-omnivore" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-gotokey="c" data-pjax="true" data-selected-links="repo_source repo_downloads repo_commits repo_tags repo_branches /mapbox/leaflet-omnivore">
          <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

        <li class="tooltipped tooltipped-w" aria-label="Issues">
          <a href="/mapbox/leaflet-omnivore/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-gotokey="i" data-selected-links="repo_issues /mapbox/leaflet-omnivore/issues">
            <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
            <span class='counter'>5</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>

      <li class="tooltipped tooltipped-w" aria-label="Pull Requests">
        <a href="/mapbox/leaflet-omnivore/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-gotokey="p" data-selected-links="repo_pulls /mapbox/leaflet-omnivore/pulls">
            <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
            <span class='counter'>1</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>


        <li class="tooltipped tooltipped-w" aria-label="Wiki">
          <a href="/mapbox/leaflet-omnivore/wiki" aria-label="Wiki" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_wiki /mapbox/leaflet-omnivore/wiki">
            <span class="octicon octicon-book"></span> <span class="full-word">Wiki</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>
    </ul>
    <div class="sunken-menu-separator"></div>
    <ul class="sunken-menu-group">

      <li class="tooltipped tooltipped-w" aria-label="Pulse">
        <a href="/mapbox/leaflet-omnivore/pulse" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="pulse /mapbox/leaflet-omnivore/pulse">
          <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped tooltipped-w" aria-label="Graphs">
        <a href="/mapbox/leaflet-omnivore/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_graphs repo_contributors /mapbox/leaflet-omnivore/graphs">
          <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped tooltipped-w" aria-label="Network">
        <a href="/mapbox/leaflet-omnivore/network" aria-label="Network" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-selected-links="repo_network /mapbox/leaflet-omnivore/network">
          <span class="octicon octicon-git-branch"></span> <span class="full-word">Network</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>
    </ul>


  </div>
</div>

              <div class="only-with-full-nav">
                

  

<div class="clone-url open"
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><strong>HTTPS</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/mapbox/leaflet-omnivore.git" readonly="readonly">

    <span aria-label="copy to clipboard" class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="https://github.com/mapbox/leaflet-omnivore.git" data-copied-hint="copied!"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="ssh"
  data-url="/users/set_protocol?protocol_selector=ssh&amp;protocol_type=clone">
  <h3><strong>SSH</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="git@github.com:mapbox/leaflet-omnivore.git" readonly="readonly">

    <span aria-label="copy to clipboard" class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="git@github.com:mapbox/leaflet-omnivore.git" data-copied-hint="copied!"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><strong>Subversion</strong> checkout URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/mapbox/leaflet-omnivore" readonly="readonly">

    <span aria-label="copy to clipboard" class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="https://github.com/mapbox/leaflet-omnivore" data-copied-hint="copied!"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>


<p class="clone-options">You can clone with
      <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>,
      <a href="#" class="js-clone-selector" data-protocol="ssh">SSH</a>,
      or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <span class="help tooltipped tooltipped-n" aria-label="Get help on which URL is right for you.">
    <a href="https://help.github.com/articles/which-remote-url-should-i-use">
    <span class="octicon octicon-question"></span>
    </a>
  </span>
</p>


  <a href="github-windows://openRepo/https://github.com/mapbox/leaflet-omnivore" class="minibutton sidebar-button" title="Save mapbox/leaflet-omnivore to your computer and use it in GitHub Desktop." aria-label="Save mapbox/leaflet-omnivore to your computer and use it in GitHub Desktop.">
    <span class="octicon octicon-device-desktop"></span>
    Clone in Desktop
  </a>

                <a href="/mapbox/leaflet-omnivore/archive/master.zip"
                   class="minibutton sidebar-button"
                   aria-label="Download mapbox/leaflet-omnivore as a zip file"
                   title="Download mapbox/leaflet-omnivore as a zip file"
                   rel="nofollow">
                  <span class="octicon octicon-cloud-download"></span>
                  Download ZIP
                </a>
              </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          


<!-- blob contrib key: blob_contributors:v21:d32d9ed476607db0cc264d92d7ee2d64 -->

<p title="This is a placeholder element" class="js-history-link-replace hidden"></p>

<a href="/mapbox/leaflet-omnivore/find/master" data-pjax data-hotkey="t" class="js-show-file-finder" style="display:none">Show File Finder</a>

<div class="file-navigation">
  

<div class="select-menu js-menu-container js-select-menu" >
  <span class="minibutton select-menu-button js-menu-target" data-hotkey="w"
    data-master-branch="master"
    data-ref="master"
    role="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-remove-close js-menu-close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mapbox/leaflet-omnivore/blob/master/leaflet-omnivore.min.js"
                 data-name="master"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="master">master</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mapbox/leaflet-omnivore/tree/v0.0.1/leaflet-omnivore.min.js"
                 data-name="v0.0.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v0.0.1">v0.0.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mapbox/leaflet-omnivore/tree/v0.0.0/leaflet-omnivore.min.js"
                 data-name="v0.0.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v0.0.0">v0.0.0</a>
            </div> <!-- /.select-menu-item -->
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->

  <div class="breadcrumb">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/mapbox/leaflet-omnivore" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">leaflet-omnivore</span></a></span></span><span class="separator"> / </span><strong class="final-path">leaflet-omnivore.min.js</strong> <span aria-label="copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="leaflet-omnivore.min.js" data-copied-hint="copied!"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>


  <div class="commit file-history-tease">
    <img alt="Tom MacWright" class="main-avatar js-avatar" data-user="32314" height="24" src="https://avatars1.githubusercontent.com/u/32314?s=140" width="24" />
    <span class="author"><a href="/tmcw" rel="author">tmcw</a></span>
    <local-time datetime="2014-02-17T11:10:06-05:00" from="now" title-format="%Y-%m-%d %H:%M:%S %z" title="2014-02-17 11:10:06 -0500">February 17, 2014</local-time>
    <div class="commit-title">
        <a href="/mapbox/leaflet-omnivore/commit/78e6931d2fce03fc75f9a97ef5543e1dfe4269f2" class="message" data-pjax="true" title="Permit string or DOM input for gpx and kml parsers">Permit string or DOM input for gpx and kml parsers</a>
    </div>

    <div class="participation">
      <p class="quickstat"><a href="#blob_contributors_box" rel="facebox"><strong>1</strong>  contributor</a></p>
      
    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list">
          <li class="facebox-user-list-item">
            <img alt="Tom MacWright" class=" js-avatar" data-user="32314" height="24" src="https://avatars1.githubusercontent.com/u/32314?s=140" width="24" />
            <a href="/tmcw">tmcw</a>
          </li>
      </ul>
    </div>
  </div>

<div class="file-box">
  <div class="file">
    <div class="meta clearfix">
      <div class="info file-name">
        <span class="icon"><b class="octicon octicon-file-text"></b></span>
        <span class="mode" title="File Mode">file</span>
        <span class="meta-divider"></span>
          <span>3 lines (3 sloc)</span>
          <span class="meta-divider"></span>
        <span>66.988 kb</span>
      </div>
      <div class="actions">
        <div class="button-group">
            <a class="minibutton tooltipped tooltipped-w"
               href="github-windows://openRepo/https://github.com/mapbox/leaflet-omnivore?branch=master&amp;filepath=leaflet-omnivore.min.js" aria-label="Open this file in GitHub for Windows">
                <span class="octicon octicon-device-desktop"></span> Open
            </a>
                <a class="minibutton tooltipped tooltipped-n js-update-url-with-hash"
                   aria-label="Clicking this button will automatically fork this project so you can edit the file"
                   href="/mapbox/leaflet-omnivore/edit/master/leaflet-omnivore.min.js"
                   data-method="post" rel="nofollow">Edit</a>
          <a href="/mapbox/leaflet-omnivore/raw/master/leaflet-omnivore.min.js" class="button minibutton " id="raw-url">Raw</a>
            <a href="/mapbox/leaflet-omnivore/blame/master/leaflet-omnivore.min.js" class="button minibutton js-update-url-with-hash">Blame</a>
          <a href="/mapbox/leaflet-omnivore/commits/master/leaflet-omnivore.min.js" class="button minibutton " rel="nofollow">History</a>
        </div><!-- /.button-group -->

            <a class="minibutton danger empty-icon tooltipped tooltipped-s"
               href="/mapbox/leaflet-omnivore/delete/master/leaflet-omnivore.min.js"
               aria-label="Fork this project and delete file"
               data-method="post" data-test-id="delete-blob-file" rel="nofollow">

          Delete
        </a>
      </div><!-- /.actions -->
    </div>
        <div class="blob-wrapper data type-javascript js-blob-data">
        <table class="file-code file-diff tab-size-8">
          <tr class="file-code-line">
            <td class="blob-line-nums">
              <span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>

            </td>
            <td class="blob-line-code"><div class="code-body highlight"><pre><div class='line' id='LC1'>!function(e){if(&quot;object&quot;==typeof exports)module.exports=e();else if(&quot;function&quot;==typeof define&amp;&amp;define.amd)define(e);else{var o;&quot;undefined&quot;!=typeof window?o=window:&quot;undefined&quot;!=typeof global?o=global:&quot;undefined&quot;!=typeof self&amp;&amp;(o=self),o.omnivore=e()}}(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==&quot;function&quot;&amp;&amp;require;if(!u&amp;&amp;a)return a(o,!0);if(i)return i(o,!0);throw new Error(&quot;Cannot find module &#39;&quot;+o+&quot;&#39;&quot;)}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==&quot;function&quot;&amp;&amp;require;for(var o=0;o&lt;r.length;o++)s(r[o]);return s}({1:[function(_dereq_,module,exports){var xhr=_dereq_(&quot;corslite&quot;),csv2geojson=_dereq_(&quot;csv2geojson&quot;),wellknown=_dereq_(&quot;wellknown&quot;),topojson=_dereq_(&quot;topojson&quot;),toGeoJSON=_dereq_(&quot;togeojson&quot;);module.exports.geojson=geojsonLoad;module.exports.topojson=topojsonLoad;module.exports.topojson.parse=topojsonParse;module.exports.csv=csvLoad;module.exports.csv.parse=csvParse;module.exports.gpx=gpxLoad;module.exports.gpx.parse=gpxParse;module.exports.kml=kmlLoad;module.exports.kml.parse=kmlParse;module.exports.wkt=wktLoad;module.exports.wkt.parse=wktParse;function geojsonLoad(url,options){var layer=L.geoJson();xhr(url,function(err,response){if(err)return layer.fire(&quot;error&quot;,{error:err});layer.addData(JSON.parse(response.responseText));layer.fire(&quot;ready&quot;)});return layer}function topojsonLoad(url,options){var layer=L.geoJson();xhr(url,onload);function onload(err,response){if(err)return layer.fire(&quot;error&quot;,{error:err});layer.addData(topojsonParse(response.responseText));layer.fire(&quot;ready&quot;)}return layer}function topojsonParse(data){var o=typeof data===&quot;string&quot;?JSON.parse(data):data;var features=[];for(var i in o.objects){var ft=topojson.feature(o,o.objects[i]);if(ft.features)features=features.concat(ft.features);else features=features.concat([ft])}return features}function csvLoad(url,options){var layer=L.geoJson();xhr(url,onload);function onload(err,response){var error;if(err)return layer.fire(&quot;error&quot;,{error:err});function avoidReady(){error=true}layer.on(&quot;error&quot;,avoidReady);csvParse(response.responseText,options,layer);layer.off(&quot;error&quot;,avoidReady);if(!error)layer.fire(&quot;ready&quot;)}return layer}function csvParse(csv,options,layer){layer=layer||L.geoJson();options=options||{};csv2geojson.csv2geojson(csv,options,onparse);function onparse(err,geojson){if(err)return layer.fire(&quot;error&quot;,{error:err});layer.addData(geojson)}return layer}function gpxLoad(url,options){var layer=L.geoJson();xhr(url,onload);function onload(err,response){var error;if(err)return layer.fire(&quot;error&quot;,{error:err});function avoidReady(){error=true}layer.on(&quot;error&quot;,avoidReady);gpxParse(response.responseXML||response.responseText,options,layer);layer.off(&quot;error&quot;,avoidReady);if(!error)layer.fire(&quot;ready&quot;)}return layer}function gpxParse(gpx,options,layer){var xml=parseXML(gpx);if(!xml)return layer.fire(&quot;error&quot;,{error:&quot;Could not parse GPX&quot;});layer=layer||L.geoJson();var geojson=toGeoJSON.gpx(xml);layer.addData(geojson);return layer}function kmlLoad(url,options){var layer=L.geoJson();xhr(url,onload);function onload(err,response){var error;if(err)return layer.fire(&quot;error&quot;,{error:err});function avoidReady(){error=true}layer.on(&quot;error&quot;,avoidReady);kmlParse(response.responseXML||response.responseText,options,layer);layer.off(&quot;error&quot;,avoidReady);if(!error)layer.fire(&quot;ready&quot;)}return layer}function kmlParse(gpx,options,layer){var xml=parseXML(gpx);if(!xml)return layer.fire(&quot;error&quot;,{error:&quot;Could not parse GPX&quot;});layer=layer||L.geoJson();var geojson=toGeoJSON.kml(xml);layer.addData(geojson);return layer}function wktLoad(url,options){var layer=L.geoJson();xhr(url,onload);function onload(err,response){if(err)return layer.fire(&quot;error&quot;,{error:err});wktParse(response.responseText,options,layer);layer.fire(&quot;ready&quot;)}return layer}function wktParse(wkt,options,layer){layer=layer||L.geoJson();var geojson=wellknown(wkt);layer.addData(geojson);return layer}function parseXML(str){if(typeof str===&quot;string&quot;){return(new DOMParser).parseFromString(str,&quot;text/xml&quot;)}else{return str}}},{corslite:5,csv2geojson:6,togeojson:9,topojson:10,wellknown:38}],2:[function(_dereq_,module,exports){},{}],3:[function(_dereq_,module,exports){module.exports=_dereq_(2)},{}],4:[function(_dereq_,module,exports){var process=module.exports={};process.nextTick=function(){var canSetImmediate=typeof window!==&quot;undefined&quot;&amp;&amp;window.setImmediate;var canPost=typeof window!==&quot;undefined&quot;&amp;&amp;window.postMessage&amp;&amp;window.addEventListener;if(canSetImmediate){return function(f){return window.setImmediate(f)}}if(canPost){var queue=[];window.addEventListener(&quot;message&quot;,function(ev){var source=ev.source;if((source===window||source===null)&amp;&amp;ev.data===&quot;process-tick&quot;){ev.stopPropagation();if(queue.length&gt;0){var fn=queue.shift();fn()}}},true);return function nextTick(fn){queue.push(fn);window.postMessage(&quot;process-tick&quot;,&quot;*&quot;)}}return function nextTick(fn){setTimeout(fn,0)}}();process.title=&quot;browser&quot;;process.browser=true;process.env={};process.argv=[];process.binding=function(name){throw new Error(&quot;process.binding is not supported&quot;)};process.cwd=function(){return&quot;/&quot;};process.chdir=function(dir){throw new Error(&quot;process.chdir is not supported&quot;)}},{}],5:[function(_dereq_,module,exports){function xhr(url,callback,cors){var sent=false;if(typeof window.XMLHttpRequest===&quot;undefined&quot;){return callback(Error(&quot;Browser not supported&quot;))}if(typeof cors===&quot;undefined&quot;){var m=url.match(/^\s*https?:\/\/[^\/]*/);cors=m&amp;&amp;m[0]!==location.protocol+&quot;//&quot;+location.domain+(location.port?&quot;:&quot;+location.port:&quot;&quot;)}var x;function isSuccessful(status){return status&gt;=200&amp;&amp;status&lt;300||status===304}if(cors&amp;&amp;(typeof window.XDomainRequest===&quot;object&quot;||typeof window.XDomainRequest===&quot;function&quot;)){x=new window.XDomainRequest;var original=callback;callback=function(){if(sent){original.apply(this,arguments)}else{var that=this,args=arguments;setTimeout(function(){original.apply(that,args)},0)}}}else{x=new window.XMLHttpRequest}function loaded(){if(x.status===undefined||isSuccessful(x.status))callback.call(x,null,x);else callback.call(x,x,null)}if(&quot;onload&quot;in x){x.onload=loaded}else{x.onreadystatechange=function readystate(){if(x.readyState===4){loaded()}}}x.onerror=function error(evt){callback.call(this,evt||true,null);callback=function(){}};x.onprogress=function(){};x.ontimeout=function(evt){callback.call(this,evt,null);callback=function(){}};x.onabort=function(evt){callback.call(this,evt,null);callback=function(){}};x.open(&quot;GET&quot;,url,true);x.send(null);sent=true;return x}if(typeof module!==&quot;undefined&quot;)module.exports=xhr},{}],6:[function(_dereq_,module,exports){var dsv=_dereq_(&quot;dsv&quot;),sexagesimal=_dereq_(&quot;sexagesimal&quot;);function isLat(f){return!!f.match(/(Lat)(itude)?/gi)}function isLon(f){return!!f.match(/(L)(on|ng)(gitude)?/i)}function keyCount(o){return typeof o==&quot;object&quot;?Object.keys(o).length:0}function autoDelimiter(x){var delimiters=[&quot;,&quot;,&quot;;&quot;,&quot;	&quot;,&quot;|&quot;];var results=[];delimiters.forEach(function(delimiter){var res=dsv(delimiter).parse(x);if(res.length&gt;=1){var count=keyCount(res[0]);for(var i=0;i&lt;res.length;i++){if(keyCount(res[i])!==count)return}results.push({delimiter:delimiter,arity:Object.keys(res[0]).length})}});if(results.length){return results.sort(function(a,b){return b.arity-a.arity})[0].delimiter}else{return null}}function auto(x){var delimiter=autoDelimiter(x);if(!delimiter)return null;return dsv(delimiter).parse(x)}function csv2geojson(x,options,callback){if(!callback){callback=options;options={}}options.delimiter=options.delimiter||&quot;,&quot;;var latfield=options.latfield||&quot;&quot;,lonfield=options.lonfield||&quot;&quot;;var features=[],featurecollection={type:&quot;FeatureCollection&quot;,features:features};if(options.delimiter===&quot;auto&quot;&amp;&amp;typeof x==&quot;string&quot;){options.delimiter=autoDelimiter(x);if(!options.delimiter)return callback({type:&quot;Error&quot;,message:&quot;Could not autodetect delimiter&quot;})}var parsed=typeof x==&quot;string&quot;?dsv(options.delimiter).parse(x):x;if(!parsed.length)return callback(null,featurecollection);if(!latfield||!lonfield){for(var f in parsed[0]){if(!latfield&amp;&amp;isLat(f))latfield=f;if(!lonfield&amp;&amp;isLon(f))lonfield=f}if(!latfield||!lonfield){var fields=[];for(var k in parsed[0])fields.push(k);return callback({type:&quot;Error&quot;,message:&quot;Latitude and longitude fields not present&quot;,data:parsed,fields:fields})}}var errors=[];for(var i=0;i&lt;parsed.length;i++){if(parsed[i][lonfield]!==undefined&amp;&amp;parsed[i][lonfield]!==undefined){var lonk=parsed[i][lonfield],latk=parsed[i][latfield],lonf,latf,a;a=sexagesimal(lonk,&quot;EW&quot;);if(a)lonk=a;a=sexagesimal(latk,&quot;NS&quot;);if(a)latk=a;lonf=parseFloat(lonk);latf=parseFloat(latk);if(isNaN(lonf)||isNaN(latf)){errors.push({message:&quot;A row contained an invalid value for latitude or longitude&quot;,row:parsed[i]})}else{if(!options.includeLatLon){delete parsed[i][lonfield];delete parsed[i][latfield]}features.push({type:&quot;Feature&quot;,properties:parsed[i],geometry:{type:&quot;Point&quot;,coordinates:[parseFloat(lonf),parseFloat(latf)]}})}}}callback(errors.length?errors:null,featurecollection)}function toLine(gj){var features=gj.features;var line={type:&quot;Feature&quot;,geometry:{type:&quot;LineString&quot;,coordinates:[]}};for(var i=0;i&lt;features.length;i++){line.geometry.coordinates.push(features[i].geometry.coordinates)}line.properties=features[0].properties;return{type:&quot;FeatureCollection&quot;,features:[line]}}function toPolygon(gj){var features=gj.features;var poly={type:&quot;Feature&quot;,geometry:{type:&quot;Polygon&quot;,coordinates:[[]]}};for(var i=0;i&lt;features.length;i++){poly.geometry.coordinates[0].push(features[i].geometry.coordinates)}poly.properties=features[0].properties;return{type:&quot;FeatureCollection&quot;,features:[poly]}}module.exports={isLon:isLon,isLat:isLat,csv:dsv.csv.parse,tsv:dsv.tsv.parse,dsv:dsv,auto:auto,csv2geojson:csv2geojson,toLine:toLine,toPolygon:toPolygon}},{dsv:7,sexagesimal:8}],7:[function(_dereq_,module,exports){var fs=_dereq_(&quot;fs&quot;);module.exports=new Function(&#39;dsv.version = &quot;0.0.3&quot;;\n\ndsv.tsv = dsv(&quot;\\t&quot;);\ndsv.csv = dsv(&quot;,&quot;);\n\nfunction dsv(delimiter) {\n  var dsv = {},\n      reFormat = new RegExp(&quot;[\\&quot;&quot; + delimiter + &quot;\\n]&quot;),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  dsv.parse = function(text, f) {\n    var o;\n    return dsv.parseRows(text, function(row, i) {\n      if (o) return o(row, i - 1);\n      var a = new Function(&quot;d&quot;, &quot;return {&quot; + row.map(function(name, i) {\n        return JSON.stringify(name) + &quot;: d[&quot; + i + &quot;]&quot;;\n      }).join(&quot;,&quot;) + &quot;}&quot;);\n      o = f ? function(row, i) { return f(a(row), i); } : a;\n    });\n  };\n\n  dsv.parseRows = function(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I &gt;= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ &lt; N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        var c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.substring(j + 1, i).replace(/&quot;&quot;/g, &quot;\\&quot;&quot;);\n      }\n\n      // common case: find next delimiter or newline\n      while (I &lt; N) {\n        var c = text.charCodeAt(I++), k = 1;\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.substring(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.substring(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL &amp;&amp; t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f &amp;&amp; !(a = f(a, n++))) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  };\n\n  dsv.format = function(rows) {\n    if (Array.isArray(rows[0])) return dsv.formatRows(rows); // deprecated; use formatRows\n    var fieldSet = {}, fields = [];\n\n    // Compute unique fields in order of discovery.\n    rows.forEach(function(row) {\n      for (var field in row) {\n        if (!(field in fieldSet)) {\n          fields.push(fieldSet[field] = field);\n        }\n      }\n    });\n\n    return [fields.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return fields.map(function(field) {\n        return formatValue(row[field]);\n      }).join(delimiter);\n    })).join(&quot;\\n&quot;);\n  };\n\n  dsv.formatRows = function(rows) {\n    return rows.map(formatRow).join(&quot;\\n&quot;);\n  };\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return reFormat.test(text) ? &quot;\\&quot;&quot; + text.replace(/\\&quot;/g, &quot;\\&quot;\\&quot;&quot;) + &quot;\\&quot;&quot; : text;\n  }\n\n  return dsv;\n}\n&#39;+&quot;;return dsv&quot;)()},{fs:2}],8:[function(_dereq_,module,exports){module.exports=function(x,dims){if(!dims)dims=&quot;NSEW&quot;;if(typeof x!==&quot;string&quot;)return null;var r=/^([0-9.]+)Â°? *(?:([0-9.]+)[&#39;ââ²â] *)?(?:([0-9.]+)(?:&#39;&#39;|&quot;|â|â³) *)?([NSEW])?/,m=x.match(r);if(!m)return null;else if(m[4]&amp;&amp;dims.indexOf(m[4])===-1)return null;else return((m[1]?parseFloat(m[1]):0)+(m[2]?parseFloat(m[2])/60:0)+(m[3]?parseFloat(m[3])/3600:0))*(m[4]&amp;&amp;m[4]===&quot;S&quot;||m[4]===&quot;W&quot;?-1:1)}},{}],9:[function(_dereq_,module,exports){(function(process){toGeoJSON=function(){&quot;use strict&quot;;var removeSpace=/\s*/g,trimSpace=/^\s*|\s*$/g,splitSpace=/\s+/;function okhash(x){if(!x||!x.length)return 0;for(var i=0,h=0;i&lt;x.length;i++){h=(h&lt;&lt;5)-h+x.charCodeAt(i)|0}return h}function get(x,y){return x.getElementsByTagName(y)}function attr(x,y){return x.getAttribute(y)}function attrf(x,y){return parseFloat(attr(x,y))}function get1(x,y){var n=get(x,y);return n.length?n[0]:null}function norm(el){if(el.normalize){el.normalize()}return el}function numarray(x){for(var j=0,o=[];j&lt;x.length;j++)o[j]=parseFloat(x[j]);return o}function clean(x){var o={};for(var i in x)if(x[i])o[i]=x[i];return o}function nodeVal(x){if(x){norm(x)}return x&amp;&amp;x.firstChild&amp;&amp;x.firstChild.nodeValue}function coord1(v){return numarray(v.replace(removeSpace,&quot;&quot;).split(&quot;,&quot;))}function coord(v){var coords=v.replace(trimSpace,&quot;&quot;).split(splitSpace),o=[];for(var i=0;i&lt;coords.length;i++){o.push(coord1(coords[i]))}return o}function coordPair(x){var ll=[attrf(x,&quot;lon&quot;),attrf(x,&quot;lat&quot;)],ele=get1(x,&quot;ele&quot;);if(ele)ll.push(parseFloat(nodeVal(ele)));return ll}function fc(){return{type:&quot;FeatureCollection&quot;,features:[]}}var serializer;if(typeof XMLSerializer!==&quot;undefined&quot;){serializer=new XMLSerializer}else if(typeof exports===&quot;object&quot;&amp;&amp;typeof process===&quot;object&quot;&amp;&amp;!process.browser){serializer=new(_dereq_(&quot;xmldom&quot;).XMLSerializer)}function xml2str(str){return serializer.serializeToString(str)}var t={kml:function(doc,o){o=o||{};var gj=fc(),styleIndex={},geotypes=[&quot;Polygon&quot;,&quot;LineString&quot;,&quot;Point&quot;,&quot;Track&quot;],placemarks=get(doc,&quot;Placemark&quot;),styles=get(doc,&quot;Style&quot;);for(var k=0;k&lt;styles.length;k++){styleIndex[&quot;#&quot;+attr(styles[k],&quot;id&quot;)]=okhash(xml2str(styles[k])).toString(16)}for(var j=0;j&lt;placemarks.length;j++){gj.features=gj.features.concat(getPlacemark(placemarks[j]))}function gxCoord(v){return numarray(v.split(&quot; &quot;))}function gxCoords(root){var elems=get(root,&quot;coord&quot;,&quot;gx&quot;),coords=[];for(var i=0;i&lt;elems.length;i++)coords.push(gxCoord(nodeVal(elems[i])));return coords}function getGeometry(root){var geomNode,geomNodes,i,j,k,geoms=[];if(get1(root,&quot;MultiGeometry&quot;))return getGeometry(get1(root,&quot;MultiGeometry&quot;));if(get1(root,&quot;MultiTrack&quot;))return getGeometry(get1(root,&quot;MultiTrack&quot;));for(i=0;i&lt;geotypes.length;i++){geomNodes=get(root,geotypes[i]);if(geomNodes){for(j=0;j&lt;geomNodes.length;j++){geomNode=geomNodes[j];if(geotypes[i]==&quot;Point&quot;){geoms.push({type:&quot;Point&quot;,coordinates:coord1(nodeVal(get1(geomNode,&quot;coordinates&quot;)))})}else if(geotypes[i]==&quot;LineString&quot;){geoms.push({type:&quot;LineString&quot;,coordinates:coord(nodeVal(get1(geomNode,&quot;coordinates&quot;)))})}else if(geotypes[i]==&quot;Polygon&quot;){var rings=get(geomNode,&quot;LinearRing&quot;),coords=[];for(k=0;k&lt;rings.length;k++){coords.push(coord(nodeVal(get1(rings[k],&quot;coordinates&quot;))))}geoms.push({type:&quot;Polygon&quot;,coordinates:coords})}else if(geotypes[i]==&quot;Track&quot;){geoms.push({type:&quot;LineString&quot;,coordinates:gxCoords(geomNode)})}}}}return geoms}function getPlacemark(root){var geoms=getGeometry(root),i,properties={},name=nodeVal(get1(root,&quot;name&quot;)),styleUrl=nodeVal(get1(root,&quot;styleUrl&quot;)),description=nodeVal(get1(root,&quot;description&quot;)),timeSpan=get1(root,&quot;TimeSpan&quot;),extendedData=get1(root,&quot;ExtendedData&quot;);if(!geoms.length)return[];if(name)properties.name=name;if(styleUrl&amp;&amp;styleIndex[styleUrl]){properties.styleUrl=styleUrl;properties.styleHash=styleIndex[styleUrl]}if(description)properties.description=description;if(timeSpan){var begin=nodeVal(get1(timeSpan,&quot;begin&quot;));var end=nodeVal(get1(timeSpan,&quot;end&quot;));properties.timespan={begin:begin,end:end}}if(extendedData){var datas=get(extendedData,&quot;Data&quot;),simpleDatas=get(extendedData,&quot;SimpleData&quot;);for(i=0;i&lt;datas.length;i++){properties[datas[i].getAttribute(&quot;name&quot;)]=nodeVal(get1(datas[i],&quot;value&quot;))}for(i=0;i&lt;simpleDatas.length;i++){properties[simpleDatas[i].getAttribute(&quot;name&quot;)]=nodeVal(simpleDatas[i])}}return[{type:&quot;Feature&quot;,geometry:geoms.length===1?geoms[0]:{type:&quot;GeometryCollection&quot;,geometries:geoms},properties:properties}]}return gj},gpx:function(doc,o){var i,tracks=get(doc,&quot;trk&quot;),routes=get(doc,&quot;rte&quot;),waypoints=get(doc,&quot;wpt&quot;),gj=fc();for(i=0;i&lt;tracks.length;i++){gj.features.push(getLinestring(tracks[i],&quot;trkpt&quot;))}for(i=0;i&lt;routes.length;i++){gj.features.push(getLinestring(routes[i],&quot;rtept&quot;))}for(i=0;i&lt;waypoints.length;i++){gj.features.push(getPoint(waypoints[i]))}function getLinestring(node,pointname){var j,pts=get(node,pointname),line=[];for(j=0;j&lt;pts.length;j++){line.push(coordPair(pts[j]))}return{type:&quot;Feature&quot;,properties:getProperties(node),geometry:{type:&quot;LineString&quot;,coordinates:line}}}function getPoint(node){var prop=getProperties(node);prop.sym=nodeVal(get1(node,&quot;sym&quot;));return{type:&quot;Feature&quot;,properties:prop,geometry:{type:&quot;Point&quot;,coordinates:coordPair(node)}}}function getProperties(node){var meta=[&quot;name&quot;,&quot;desc&quot;,&quot;author&quot;,&quot;copyright&quot;,&quot;link&quot;,&quot;time&quot;,&quot;keywords&quot;],prop={},k;for(k=0;k&lt;meta.length;k++){prop[meta[k]]=nodeVal(get1(node,meta[k]))}return clean(prop)}return gj}};return t}();if(typeof module!==&quot;undefined&quot;)module.exports=toGeoJSON}).call(this,_dereq_(&quot;/Users/tmcw/src/leaflet-omnivore/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js&quot;))},{&quot;/Users/tmcw/src/leaflet-omnivore/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js&quot;:4,xmldom:3}],10:[function(_dereq_,module,exports){var topojson=module.exports=_dereq_(&quot;./topojson&quot;);topojson.topology=_dereq_(&quot;./lib/topojson/topology&quot;);topojson.simplify=_dereq_(&quot;./lib/topojson/simplify&quot;);topojson.clockwise=_dereq_(&quot;./lib/topojson/clockwise&quot;);topojson.filter=_dereq_(&quot;./lib/topojson/filter&quot;);topojson.prune=_dereq_(&quot;./lib/topojson/prune&quot;);topojson.bind=_dereq_(&quot;./lib/topojson/bind&quot;)},{&quot;./lib/topojson/bind&quot;:11,&quot;./lib/topojson/clockwise&quot;:14,&quot;./lib/topojson/filter&quot;:18,&quot;./lib/topojson/prune&quot;:21,&quot;./lib/topojson/simplify&quot;:23,&quot;./lib/topojson/topology&quot;:26,&quot;./topojson&quot;:37}],11:[function(_dereq_,module,exports){var type=_dereq_(&quot;./type&quot;),topojson=_dereq_(&quot;../../&quot;);module.exports=function(topology,propertiesById){var bind=type({geometry:function(geometry){var properties0=geometry.properties,properties1=propertiesById[geometry.id];if(properties1){if(properties0)for(var k in properties1)properties0[k]=properties1[k];else for(var k in properties1){geometry.properties=properties1;break}}this.defaults.geometry.call(this,geometry)},LineString:noop,MultiLineString:noop,Point:noop,MultiPoint:noop,Polygon:noop,MultiPolygon:noop});for(var key in topology.objects){bind.object(topology.objects[key])}};function noop(){}},{&quot;../../&quot;:10,&quot;./type&quot;:36}],12:[function(_dereq_,module,exports){module.exports=function(objects){var x0=Infinity,y0=Infinity,x1=-Infinity,y1=-Infinity;function boundGeometry(geometry){if(geometry&amp;&amp;boundGeometryType.hasOwnProperty(geometry.type))boundGeometryType[geometry.type](geometry)}var boundGeometryType={GeometryCollection:function(o){o.geometries.forEach(boundGeometry)},Point:function(o){boundPoint(o.coordinates)},MultiPoint:function(o){o.coordinates.forEach(boundPoint)},LineString:function(o){boundLine(o.coordinates)},MultiLineString:function(o){o.coordinates.forEach(boundLine)},Polygon:function(o){o.coordinates.forEach(boundLine)},MultiPolygon:function(o){o.coordinates.forEach(boundMultiLine)}};function boundPoint(coordinates){var x=coordinates[0],y=coordinates[1];if(x&lt;x0)x0=x;if(x&gt;x1)x1=x;if(y&lt;y0)y0=y;if(y&gt;y1)y1=y}function boundLine(coordinates){coordinates.forEach(boundPoint)}function boundMultiLine(coordinates){coordinates.forEach(boundLine)}for(var key in objects){boundGeometry(objects[key])}return[x0,y0,x1,y1]}},{}],13:[function(_dereq_,module,exports){exports.name=&quot;cartesian&quot;;exports.formatDistance=formatDistance;exports.ringArea=ringArea;exports.absoluteArea=Math.abs;exports.triangleArea=triangleArea;exports.distance=distance;function formatDistance(d){return d.toString()}function ringArea(ring){var i=0,n=ring.length,area=ring[n-1][1]*ring[0][0]-ring[n-1][0]*ring[0][1];while(++i&lt;n){area+=ring[i-1][1]*ring[i][0]-ring[i-1][0]*ring[i][1]}return-area*.5}function triangleArea(triangle){return Math.abs((triangle[0][0]-triangle[2][0])*(triangle[1][1]-triangle[0][1])-(triangle[0][0]-triangle[1][0])*(triangle[2][1]-triangle[0][1]))}function distance(x0,y0,x1,y1){var dx=x0-x1,dy=y0-y1;return Math.sqrt(dx*dx+dy*dy)}},{}],14:[function(_dereq_,module,exports){var type=_dereq_(&quot;./type&quot;),systems=_dereq_(&quot;./coordinate-systems&quot;),topojson=_dereq_(&quot;../../&quot;);module.exports=function(object,options){if(object.type===&quot;Topology&quot;)clockwiseTopology(object,options);else clockwiseGeometry(object,options)};function clockwiseGeometry(object,options){var system=null;if(options)&quot;coordinate-system&quot;in options&amp;&amp;(system=systems[options[&quot;coordinate-system&quot;]]);var clockwisePolygon=clockwisePolygonSystem(system.ringArea,reverse);type({LineString:noop,MultiLineString:noop,Point:noop,MultiPoint:noop,Polygon:function(polygon){clockwisePolygon(polygon.coordinates)},MultiPolygon:function(multiPolygon){multiPolygon.coordinates.forEach(clockwisePolygon)}}).object(object);function reverse(array){array.reverse()}}function clockwiseTopology(topology,options){var system=null;if(options)&quot;coordinate-system&quot;in options&amp;&amp;(system=systems[options[&quot;coordinate-system&quot;]]);var clockwisePolygon=clockwisePolygonSystem(ringArea,reverse);var clockwise=type({LineString:noop,MultiLineString:noop,Point:noop,MultiPoint:noop,Polygon:function(polygon){clockwisePolygon(polygon.arcs)},MultiPolygon:function(multiPolygon){multiPolygon.arcs.forEach(clockwisePolygon)}});for(var key in topology.objects){clockwise.object(topology.objects[key])}function ringArea(ring){return system.ringArea(topojson.feature(topology,{type:&quot;Polygon&quot;,arcs:[ring]}).geometry.coordinates[0])}function reverse(ring){var i=-1,n=ring.length;ring.reverse();while(++i&lt;n)ring[i]=~ring[i]}}function clockwisePolygonSystem(ringArea,reverse){return function(rings){if(!(n=rings.length))return;var n,areas=new Array(n),max=-Infinity,best,area,t;for(var i=0;i&lt;n;++i){var area=Math.abs(areas[i]=ringArea(rings[i]));if(area&gt;max)max=area,best=i}if(best){t=rings[best],rings[best]=rings[0],rings[0]=t;t=areas[best],areas[best]=areas[0],areas[0]=t}if(areas[0]&lt;0)reverse(rings[0]);for(var i=1;i&lt;n;++i){if(areas[i]&gt;0)reverse(rings[i])}}}function noop(){}},{&quot;../../&quot;:10,&quot;./coordinate-systems&quot;:16,&quot;./type&quot;:36}],15:[function(_dereq_,module,exports){module.exports=function(objects,id){if(arguments.length&lt;2)id=function(d){return d.id};function idObject(object){if(object&amp;&amp;idObjectType.hasOwnProperty(object.type))idObjectType[object.type](object)}function idFeature(feature){var i=id(feature);if(i==null)delete feature.id;else feature.id=i}var idObjectType={Feature:idFeature,FeatureCollection:function(collection){collection.features.forEach(idFeature)}};for(var key in objects){idObject(objects[key])}return objects}},{}],16:[function(_dereq_,module,exports){module.exports={cartesian:_dereq_(&quot;./cartesian&quot;),spherical:_dereq_(&quot;./spherical&quot;)}},{&quot;./cartesian&quot;:13,&quot;./spherical&quot;:24}],17:[function(_dereq_,module,exports){module.exports=function(topology){var arcs=topology.arcs,i=-1,n=arcs.length;while(++i&lt;n){var arc=arcs[i],j=0,m=arc.length,point=arc[0],x0=point[0],y0=point[1],x1,y1;while(++j&lt;m){point=arc[j];x1=point[0];y1=point[1];arc[j]=[x1-x0,y1-y0];x0=x1;y0=y1}}return topology}},{}],18:[function(_dereq_,module,exports){var type=_dereq_(&quot;./type&quot;),prune=_dereq_(&quot;./prune&quot;),clockwise=_dereq_(&quot;./clockwise&quot;),systems=_dereq_(&quot;./coordinate-systems&quot;),topojson=_dereq_(&quot;../../&quot;);module.exports=function(topology,options){var system=null,forceClockwise=true,minimumArea;if(options)&quot;coordinate-system&quot;in options&amp;&amp;(system=systems[options[&quot;coordinate-system&quot;]]),&quot;minimum-area&quot;in options&amp;&amp;(minimumArea=+options[&quot;minimum-area&quot;]),&quot;force-clockwise&quot;in options&amp;&amp;(forceClockwise=!!options[&quot;force-clockwise&quot;]);if(forceClockwise)clockwise(topology,options);if(!(minimumArea&gt;0))minimumArea=Number.MIN_VALUE;var filter=type({LineString:noop,MultiLineString:noop,Point:noop,MultiPoint:noop,Polygon:function(polygon){polygon.arcs=polygon.arcs.filter(ringArea);if(!polygon.arcs.length){polygon.type=null;delete polygon.arcs}},MultiPolygon:function(multiPolygon){multiPolygon.arcs=multiPolygon.arcs.map(function(polygon){return polygon.filter(ringArea)}).filter(function(polygon){return polygon.length});if(!multiPolygon.arcs.length){multiPolygon.type=null;delete multiPolygon.arcs}},GeometryCollection:function(collection){this.defaults.GeometryCollection.call(this,collection);collection.geometries=collection.geometries.filter(function(geometry){return geometry.type!=null});if(!collection.geometries.length){collection.type=null;delete collection.geometries}}});for(var key in topology.objects){filter.object(topology.objects[key])}prune(topology,options);function ringArea(ring){var topopolygon={type:&quot;Polygon&quot;,arcs:[ring]},geopolygon=topojson.feature(topology,topopolygon),exterior=geopolygon.geometry.coordinates[0],exteriorArea=system.absoluteArea(system.ringArea(exterior));return exteriorArea&gt;=minimumArea}};function noop(){}},{&quot;../../&quot;:10,&quot;./clockwise&quot;:14,&quot;./coordinate-systems&quot;:16,&quot;./prune&quot;:21,&quot;./type&quot;:36}],19:[function(_dereq_,module,exports){module.exports=function(objects){function geomifyObject(object){return(object&amp;&amp;geomifyObjectType.hasOwnProperty(object.type)?geomifyObjectType[object.type]:geomifyGeometry)(object)}function geomifyFeature(feature){var geometry=feature.geometry;if(geometry==null){feature.type=null}else{geomifyGeometry(geometry);feature.type=geometry.type;if(geometry.geometries)feature.geometries=geometry.geometries;else if(geometry.coordinates)feature.coordinates=geometry.coordinates}delete feature.geometry;return feature}function geomifyGeometry(geometry){if(!geometry)return{type:null};if(geomifyGeometryType.hasOwnProperty(geometry.type))geomifyGeometryType[geometry.type](geometry);return geometry}var geomifyObjectType={Feature:geomifyFeature,FeatureCollection:function(collection){collection.type=&quot;GeometryCollection&quot;;collection.geometries=collection.features;collection.features.forEach(geomifyFeature);delete collection.features;return collection}};var geomifyGeometryType={GeometryCollection:function(o){var geometries=o.geometries,i=-1,n=geometries.length;while(++i&lt;n)geometries[i]=geomifyGeometry(geometries[i])},MultiPoint:function(o){if(!o.coordinates.length){o.type=null;delete o.coordinates}else if(o.coordinates.length&lt;2){o.type=&quot;Point&quot;;o.coordinates=o.coordinates[0]}},LineString:function(o){if(!o.coordinates.length){o.type=null;delete o.coordinates}},MultiLineString:function(o){for(var lines=o.coordinates,i=0,N=0,n=lines.length;i&lt;n;++i){var line=lines[i];if(line.length)lines[N++]=line}if(!N){o.type=null;delete o.coordinates}else if(N&lt;2){o.type=&quot;LineString&quot;;o.coordinates=lines[0]}else{o.coordinates.length=N}},Polygon:function(o){for(var rings=o.coordinates,i=0,N=0,n=rings.length;i&lt;n;++i){var ring=rings[i];if(ring.length)rings[N++]=ring}if(!N){o.type=null;delete o.coordinates}else{o.coordinates.length=N}},MultiPolygon:function(o){for(var polygons=o.coordinates,j=0,M=0,m=polygons.length;j&lt;m;++j){for(var rings=polygons[j],i=0,N=0,n=rings.length;i&lt;n;++i){var ring=rings[i];if(ring.length)rings[N++]=ring}if(N){rings.length=N;polygons[M++]=rings}}if(!M){o.type=null;delete o.coordinates}else if(M&lt;2){o.type=&quot;Polygon&quot;;o.coordinates=polygons[0]}else{polygons.length=M}}};for(var key in objects){objects[key]=geomifyObject(objects[key])}return objects}},{}],20:[function(_dereq_,module,exports){module.exports=function(objects,filter){function prefilterGeometry(geometry){if(!geometry)return{type:null};if(prefilterGeometryType.hasOwnProperty(geometry.type))prefilterGeometryType[geometry.type](geometry);return geometry}var prefilterGeometryType={GeometryCollection:function(o){var geometries=o.geometries,i=-1,n=geometries.length;while(++i&lt;n)geometries[i]=prefilterGeometry(geometries[i])},Polygon:function(o){for(var rings=o.coordinates,i=0,N=0,n=rings.length;i&lt;n;++i){var ring=rings[i];if(filter(ring))rings[N++]=ring}if(!N){o.type=null;delete o.coordinates}else{o.coordinates.length=N}},MultiPolygon:function(o){for(var polygons=o.coordinates,j=0,M=0,m=polygons.length;j&lt;m;++j){for(var rings=polygons[j],i=0,N=0,n=rings.length;i&lt;n;++i){var ring=rings[i];if(filter(ring))rings[N++]=ring}if(N){rings.length=N;polygons[M++]=rings}}if(!M){o.type=null;delete o.coordinates}else if(M&lt;2){o.type=&quot;Polygon&quot;;o.coordinates=polygons[0]}else{polygons.length=M}}};for(var key in objects){objects[key]=prefilterGeometry(objects[key])}return objects}},{}],21:[function(_dereq_,module,exports){module.exports=function(topology,options){var verbose=false,objects=topology.objects,oldArcs=topology.arcs,oldArcCount=oldArcs.length,newArcs=topology.arcs=[],newArcCount=0,newIndexByOldIndex=new Array(oldArcs.length);if(options)&quot;verbose&quot;in options&amp;&amp;(verbose=!!options[&quot;verbose&quot;]);function pruneGeometry(geometry){if(geometry&amp;&amp;pruneGeometryType.hasOwnProperty(geometry.type))pruneGeometryType[geometry.type](geometry)}var pruneGeometryType={GeometryCollection:function(o){o.geometries.forEach(pruneGeometry)},LineString:function(o){pruneArcs(o.arcs)},MultiLineString:function(o){o.arcs.forEach(pruneArcs)},Polygon:function(o){o.arcs.forEach(pruneArcs)},MultiPolygon:function(o){o.arcs.forEach(pruneMultiArcs)}};function pruneArcs(arcs){for(var i=0,m=0,n=arcs.length;i&lt;n;++i){var oldIndex=arcs[i],oldReverse=oldIndex&lt;0&amp;&amp;(oldIndex=~oldIndex,true),oldArc=oldArcs[oldIndex],newIndex;if(oldArc.length&lt;3&amp;&amp;!oldArc[1][0]&amp;&amp;!oldArc[1][1])continue;if((newIndex=newIndexByOldIndex[oldIndex])==null){newIndexByOldIndex[oldIndex]=newIndex=newArcCount++;newArcs[newIndex]=oldArcs[oldIndex]}arcs[m++]=oldReverse?~newIndex:newIndex}if(!(arcs.length=m)&amp;&amp;n){if((newIndex=newIndexByOldIndex[oldIndex])==null){newIndexByOldIndex[oldIndex]=newIndex=newArcCount++;newArcs[newIndex]=oldArcs[oldIndex]}arcs[0]=oldReverse?~newIndex:newIndex}}function pruneMultiArcs(arcs){arcs.forEach(pruneArcs)}for(var key in objects){pruneGeometry(objects[key])}if(verbose)console.warn(&quot;prune: retained &quot;+newArcCount+&quot; / &quot;+oldArcCount+&quot; arcs (&quot;+Math.round(newArcCount/oldArcCount*100)+&quot;%)&quot;);return topology};function noop(){}},{}],22:[function(_dereq_,module,exports){module.exports=function(objects,bbox,Q){var x0=isFinite(bbox[0])?bbox[0]:0,y0=isFinite(bbox[1])?bbox[1]:0,x1=isFinite(bbox[2])?bbox[2]:0,y1=isFinite(bbox[3])?bbox[3]:0,kx=x1-x0?(Q-1)/(x1-x0):1,ky=y1-y0?(Q-1)/(y1-y0):1;</div><div class='line' id='LC2'>function quantizeGeometry(geometry){if(geometry&amp;&amp;quantizeGeometryType.hasOwnProperty(geometry.type))quantizeGeometryType[geometry.type](geometry)}var quantizeGeometryType={GeometryCollection:function(o){o.geometries.forEach(quantizeGeometry)},Point:function(o){quantizePoint(o.coordinates)},MultiPoint:function(o){o.coordinates.forEach(quantizePoint)},LineString:function(o){var line=o.coordinates;quantizeLine(line);if(line.length&lt;2)line[1]=line[0]},MultiLineString:function(o){for(var lines=o.coordinates,i=0,n=lines.length;i&lt;n;++i){var line=lines[i];quantizeLine(line);if(line.length&lt;2)line[1]=line[0]}},Polygon:function(o){for(var rings=o.coordinates,i=0,n=rings.length;i&lt;n;++i){var ring=rings[i];quantizeLine(ring);while(ring.length&lt;4)ring.push(ring[0])}},MultiPolygon:function(o){for(var polygons=o.coordinates,i=0,n=polygons.length;i&lt;n;++i){for(var rings=polygons[i],j=0,m=rings.length;j&lt;m;++j){var ring=rings[j];quantizeLine(ring);while(ring.length&lt;4)ring.push(ring[0])}}}};function quantizePoint(coordinates){coordinates[0]=Math.round((coordinates[0]-x0)*kx);coordinates[1]=Math.round((coordinates[1]-y0)*ky)}function quantizeLine(coordinates){var i=0,j=1,n=coordinates.length,pi=coordinates[0],pj,px=pi[0]=Math.round((pi[0]-x0)*kx),py=pi[1]=Math.round((pi[1]-y0)*ky),x,y;while(++i&lt;n){pi=coordinates[i];x=Math.round((pi[0]-x0)*kx);y=Math.round((pi[1]-y0)*ky);if(x!==px||y!==py){pj=coordinates[j++];pj[0]=px=x;pj[1]=py=y}}coordinates.length=j}for(var key in objects){quantizeGeometry(objects[key])}return{scale:[1/kx,1/ky],translate:[x0,y0]}}},{}],23:[function(_dereq_,module,exports){var topojson=_dereq_(&quot;../../&quot;),systems=_dereq_(&quot;./coordinate-systems&quot;);module.exports=function(topology,options){var minimumArea=0,retainProportion,verbose=false,system=null,N=topology.arcs.reduce(function(p,v){return p+v.length},0),M=0;if(options)&quot;minimum-area&quot;in options&amp;&amp;(minimumArea=+options[&quot;minimum-area&quot;]),&quot;coordinate-system&quot;in options&amp;&amp;(system=systems[options[&quot;coordinate-system&quot;]]),&quot;retain-proportion&quot;in options&amp;&amp;(retainProportion=+options[&quot;retain-proportion&quot;]),&quot;verbose&quot;in options&amp;&amp;(verbose=!!options[&quot;verbose&quot;]);topojson.presimplify(topology,system.triangleArea);if(retainProportion){var areas=[];topology.arcs.forEach(function(arc){arc.forEach(function(point){areas.push(point[2])})});options[&quot;minimum-area&quot;]=minimumArea=N?areas.sort(function(a,b){return b-a})[Math.ceil((N-1)*retainProportion)]:0;if(verbose)console.warn(&quot;simplification: effective minimum area &quot;+minimumArea.toPrecision(3))}topology.arcs.forEach(topology.transform?function(arc){var dx=0,dy=0,i=-1,j=-1,n=arc.length,source,target;while(++i&lt;n){source=arc[i];if(source[2]&gt;=minimumArea){target=arc[++j];target[0]=source[0]+dx;target[1]=source[1]+dy;dx=dy=0}else{dx+=source[0];dy+=source[1]}}arc.length=++j}:function(arc){var i=-1,j=-1,n=arc.length,point;while(++i&lt;n){point=arc[i];if(point[2]&gt;=minimumArea){arc[++j]=point}}arc.length=++j});topology.arcs.forEach(function(arc){var i=-1,n=arc.length;while(++i&lt;n)arc[i].length=2;M+=arc.length});if(verbose)console.warn(&quot;simplification: retained &quot;+M+&quot; / &quot;+N+&quot; points (&quot;+Math.round(M/N*100)+&quot;%)&quot;);return topology}},{&quot;../../&quot;:10,&quot;./coordinate-systems&quot;:16}],24:[function(_dereq_,module,exports){var Ï=Math.PI,Ï_4=Ï/4,radians=Ï/180;exports.name=&quot;spherical&quot;;exports.formatDistance=formatDistance;exports.ringArea=ringArea;exports.absoluteArea=absoluteArea;exports.triangleArea=triangleArea;exports.distance=haversinDistance;function formatDistance(radians){var km=radians*6371;return(km&gt;1?km.toFixed(3)+&quot;km&quot;:(km*1e3).toPrecision(3)+&quot;m&quot;)+&quot; (&quot;+(radians*180/Math.PI).toPrecision(3)+&quot;Â°)&quot;}function ringArea(ring){if(!ring.length)return 0;var area=0,p=ring[0],Î»=p[0]*radians,Ï=p[1]*radians/2+Ï_4,Î»0=Î»,cosÏ0=Math.cos(Ï),sinÏ0=Math.sin(Ï);for(var i=1,n=ring.length;i&lt;n;++i){p=ring[i],Î»=p[0]*radians,Ï=p[1]*radians/2+Ï_4;var dÎ»=Î»-Î»0,cosÏ=Math.cos(Ï),sinÏ=Math.sin(Ï),k=sinÏ0*sinÏ,u=cosÏ0*cosÏ+k*Math.cos(dÎ»),v=k*Math.sin(dÎ»);area+=Math.atan2(v,u);Î»0=Î»,cosÏ0=cosÏ,sinÏ0=sinÏ}return 2*(area&gt;Ï?area-2*Ï:area&lt;-Ï?area+2*Ï:area)}function absoluteArea(a){return a&lt;0?a+4*Ï:a}function triangleArea(t){var a=distance(t[0],t[1]),b=distance(t[1],t[2]),c=distance(t[2],t[0]),s=(a+b+c)/2;return 4*Math.atan(Math.sqrt(Math.max(0,Math.tan(s/2)*Math.tan((s-a)/2)*Math.tan((s-b)/2)*Math.tan((s-c)/2))))}function distance(a,b){var ÎÎ»=(b[0]-a[0])*radians,sinÎÎ»=Math.sin(ÎÎ»),cosÎÎ»=Math.cos(ÎÎ»),sinÏ0=Math.sin(a[1]*radians),cosÏ0=Math.cos(a[1]*radians),sinÏ1=Math.sin(b[1]*radians),cosÏ1=Math.cos(b[1]*radians),_;return Math.atan2(Math.sqrt((_=cosÏ1*sinÎÎ»)*_+(_=cosÏ0*sinÏ1-sinÏ0*cosÏ1*cosÎÎ»)*_),sinÏ0*sinÏ1+cosÏ0*cosÏ1*cosÎÎ»)}function haversinDistance(x0,y0,x1,y1){x0*=radians,y0*=radians,x1*=radians,y1*=radians;return 2*Math.asin(Math.sqrt(haversin(y1-y0)+Math.cos(y0)*Math.cos(y1)*haversin(x1-x0)))}function haversin(x){return(x=Math.sin(x/2))*x}},{}],25:[function(_dereq_,module,exports){var type=_dereq_(&quot;./type&quot;);module.exports=function(objects,transform){var Îµ=.01,x0=-180,x0e=x0+Îµ,x1=180,x1e=x1-Îµ,y0=-90,y0e=y0+Îµ,y1=90,y1e=y1-Îµ,fragments=[];if(transform){var kx=transform.scale[0],ky=transform.scale[1],dx=transform.translate[0],dy=transform.translate[1];x0=Math.round((x0-dx)/kx);x1=Math.round((x1-dx)/kx);y0=Math.round((y0-dy)/ky);y1=Math.round((y1-dy)/ky);x0e=Math.round((x0e-dx)/kx);x1e=Math.round((x1e-dx)/kx);y0e=Math.round((y0e-dy)/ky);y1e=Math.round((y1e-dy)/ky)}function normalizePoint(y){return y&lt;=y0e?[0,y0]:y&gt;=y1e?[0,y1]:[x0,y]}var stitch=type({polygon:function(polygon){var rings=[];for(var j=0,m=polygon.length;j&lt;m;++j){var ring=polygon[j],fragments=[];fragments.push(ring);for(var i=0,n=ring.length;i&lt;n;++i){var point=ring[i],x=point[0],y=point[1];if(x&lt;=x0e||x&gt;=x1e||y&lt;=y0e||y&gt;=y1e){for(var k=i+1;k&lt;n;++k){var pointk=ring[k],xk=pointk[0],yk=pointk[1];if(xk&gt;x0e&amp;&amp;xk&lt;x1e&amp;&amp;yk&gt;y0e&amp;&amp;yk&lt;y1e)break}if(k===i+1)continue;if(i){var fragmentBefore=ring.slice(0,i+1);fragmentBefore[fragmentBefore.length-1]=normalizePoint(y);fragments[fragments.length-1]=fragmentBefore}else{fragments.pop()}if(k&gt;=n)break;fragments.push(ring=ring.slice(k-1));ring[0]=normalizePoint(ring[0][1]);i=-1;n=ring.length}}var fragmentByStart={},fragmentByEnd={};for(var i=0,n=fragments.length;i&lt;n;++i){var fragment=fragments[i],start=fragment[0],end=fragment[fragment.length-1];if(start[0]===end[0]&amp;&amp;start[1]===end[1]){rings.push(fragment);fragments[i]=null;continue}fragment.index=i;fragmentByStart[start]=fragmentByEnd[end]=fragment}for(var i=0;i&lt;n;++i){var fragment=fragments[i];if(fragment){var start=fragment[0],end=fragment[fragment.length-1],startFragment=fragmentByEnd[start],endFragment=fragmentByStart[end];delete fragmentByStart[start];delete fragmentByEnd[end];if(start[0]===end[0]&amp;&amp;start[1]===end[1]){rings.push(fragment);continue}if(startFragment){delete fragmentByEnd[start];delete fragmentByStart[startFragment[0]];startFragment.pop();fragments[startFragment.index]=null;fragment=startFragment.concat(fragment);if(startFragment===endFragment){rings.push(fragment)}else{fragment.index=n++;fragments.push(fragmentByStart[fragment[0]]=fragmentByEnd[fragment[fragment.length-1]]=fragment)}}else if(endFragment){delete fragmentByStart[end];delete fragmentByEnd[endFragment[endFragment.length-1]];fragment.pop();fragment=fragment.concat(endFragment);fragment.index=n++;fragments[endFragment.index]=null;fragments.push(fragmentByStart[fragment[0]]=fragmentByEnd[fragment[fragment.length-1]]=fragment)}else{fragment.push(fragment[0]);rings.push(fragment)}}}}for(var i=0,n=polygon.length=rings.length;i&lt;n;++i){polygon[i]=rings[i]}}});for(var key in objects){stitch.object(objects[key])}}},{&quot;./type&quot;:36}],26:[function(_dereq_,module,exports){var type=_dereq_(&quot;./type&quot;),stitch=_dereq_(&quot;./stitch&quot;),systems=_dereq_(&quot;./coordinate-systems&quot;),topologize=_dereq_(&quot;./topology/index&quot;),delta=_dereq_(&quot;./delta&quot;),geomify=_dereq_(&quot;./geomify&quot;),prefilter=_dereq_(&quot;./prefilter&quot;),quantize=_dereq_(&quot;./quantize&quot;),bounds=_dereq_(&quot;./bounds&quot;),computeId=_dereq_(&quot;./compute-id&quot;),transformProperties=_dereq_(&quot;./transform-properties&quot;);var Îµ=1e-6;module.exports=function(objects,options){var Q=1e4,id=function(d){return d.id},propertyTransform=function(){},transform,minimumArea=0,stitchPoles=true,verbose=false,system=null;if(options)&quot;verbose&quot;in options&amp;&amp;(verbose=!!options[&quot;verbose&quot;]),&quot;stitch-poles&quot;in options&amp;&amp;(stitchPoles=!!options[&quot;stitch-poles&quot;]),&quot;coordinate-system&quot;in options&amp;&amp;(system=systems[options[&quot;coordinate-system&quot;]]),&quot;minimum-area&quot;in options&amp;&amp;(minimumArea=+options[&quot;minimum-area&quot;]),&quot;quantization&quot;in options&amp;&amp;(Q=+options[&quot;quantization&quot;]),&quot;id&quot;in options&amp;&amp;(id=options[&quot;id&quot;]),&quot;property-transform&quot;in options&amp;&amp;(propertyTransform=options[&quot;property-transform&quot;]);computeId(objects,id);transformProperties(objects,propertyTransform);geomify(objects);var bbox=bounds(objects);var oversize=bbox[0]&lt;-180-Îµ||bbox[1]&lt;-90-Îµ||bbox[2]&gt;180+Îµ||bbox[3]&gt;90+Îµ;if(!system){system=systems[oversize?&quot;cartesian&quot;:&quot;spherical&quot;];if(options)options[&quot;coordinate-system&quot;]=system.name}if(system===systems.spherical){if(oversize)throw new Error(&quot;spherical coordinates outside of [Â±180Â°, Â±90Â°]&quot;);if(bbox[0]&lt;-180+Îµ)bbox[0]=-180;if(bbox[1]&lt;-90+Îµ)bbox[1]=-90;if(bbox[2]&gt;180-Îµ)bbox[2]=180;if(bbox[3]&gt;90-Îµ)bbox[3]=90}if(verbose){console.warn(&quot;bounds: &quot;+bbox.join(&quot; &quot;)+&quot; (&quot;+system.name+&quot;)&quot;)}if(minimumArea)prefilter(objects,function(ring){return system.absoluteArea(system.ringArea(ring))&gt;=minimumArea});if(Q){transform=quantize(objects,bbox,Q);if(verbose){console.warn(&quot;quantization: &quot;+transform.scale.map(function(degrees){return system.formatDistance(degrees/180*Math.PI)}).join(&quot; &quot;))}}if(system===systems.spherical&amp;&amp;stitchPoles){stitch(objects,transform)}var topology=topologize(objects);topology.bbox=bbox;if(verbose){console.warn(&quot;topology: &quot;+topology.arcs.length+&quot; arcs, &quot;+topology.arcs.reduce(function(p,v){return p+v.length},0)+&quot; points&quot;)}if(Q)topology.transform=transform,delta(topology);return topology}},{&quot;./bounds&quot;:12,&quot;./compute-id&quot;:15,&quot;./coordinate-systems&quot;:16,&quot;./delta&quot;:17,&quot;./geomify&quot;:19,&quot;./prefilter&quot;:20,&quot;./quantize&quot;:22,&quot;./stitch&quot;:25,&quot;./topology/index&quot;:31,&quot;./transform-properties&quot;:35,&quot;./type&quot;:36}],27:[function(_dereq_,module,exports){var join=_dereq_(&quot;./join&quot;);module.exports=function(topology){var junctionByPoint=join(topology),coordinates=topology.coordinates,lines=topology.lines,rings=topology.rings;for(var i=0,n=lines.length;i&lt;n;++i){var line=lines[i],lineMid=line[0],lineEnd=line[1];while(++lineMid&lt;lineEnd){if(junctionByPoint.get(coordinates[lineMid])){var next={0:lineMid,1:line[1]};line[1]=lineMid;line=line.next=next}}}for(var i=0,n=rings.length;i&lt;n;++i){var ring=rings[i],ringStart=ring[0],ringMid=ringStart,ringEnd=ring[1],ringFixed=junctionByPoint.get(coordinates[ringStart]);while(++ringMid&lt;ringEnd){if(junctionByPoint.get(coordinates[ringMid])){if(ringFixed){var next={0:ringMid,1:ring[1]};ring[1]=ringMid;ring=ring.next=next}else{rotateArray(coordinates,ringStart,ringEnd,ringEnd-ringMid);coordinates[ringEnd]=coordinates[ringStart];ringFixed=true;ringMid=ringStart}}}}return topology};function rotateArray(array,start,end,offset){reverse(array,start,end);reverse(array,start,start+offset);reverse(array,start+offset,end)}function reverse(array,start,end){for(var mid=start+(end-- -start&gt;&gt;1),t;start&lt;mid;++start,--end){t=array[start],array[start]=array[end],array[end]=t}}},{&quot;./join&quot;:32}],28:[function(_dereq_,module,exports){var join=_dereq_(&quot;./join&quot;),hashtable=_dereq_(&quot;./hashtable&quot;),hashPoint=_dereq_(&quot;./point-hash&quot;),equalPoint=_dereq_(&quot;./point-equal&quot;);module.exports=function(topology){var coordinates=topology.coordinates,lines=topology.lines,rings=topology.rings,arcCount=lines.length+rings.length;delete topology.lines;delete topology.rings;for(var i=0,n=lines.length;i&lt;n;++i){var line=lines[i];while(line=line.next)++arcCount}for(var i=0,n=rings.length;i&lt;n;++i){var ring=rings[i];while(ring=ring.next)++arcCount}var arcsByEnd=hashtable(arcCount*2,hashPoint,equalPoint),arcs=topology.arcs=[];for(var i=0,n=lines.length;i&lt;n;++i){var line=lines[i];do{dedupLine(line)}while(line=line.next)}for(var i=0,n=rings.length;i&lt;n;++i){var ring=rings[i];if(ring.next){do{dedupLine(ring)}while(ring=ring.next)}else{dedupRing(ring)}}function dedupLine(arc){var startPoint,endPoint,startArcs,endArcs;if(startArcs=arcsByEnd.get(startPoint=coordinates[arc[0]])){for(var i=0,n=startArcs.length;i&lt;n;++i){var startArc=startArcs[i];if(equalLine(startArc,arc)){arc[0]=startArc[0];arc[1]=startArc[1];return}}}if(endArcs=arcsByEnd.get(endPoint=coordinates[arc[1]])){for(var i=0,n=endArcs.length;i&lt;n;++i){var endArc=endArcs[i];if(reverseEqualLine(endArc,arc)){arc[1]=endArc[0];arc[0]=endArc[1];return}}}if(startArcs)startArcs.push(arc);else arcsByEnd.set(startPoint,[arc]);if(endArcs)endArcs.push(arc);else arcsByEnd.set(endPoint,[arc]);arcs.push(arc)}function dedupRing(arc){var endPoint,endArcs;if(endArcs=arcsByEnd.get(endPoint=coordinates[arc[0]])){for(var i=0,n=endArcs.length;i&lt;n;++i){var endArc=endArcs[i];if(equalRing(endArc,arc)){arc[0]=endArc[0];arc[1]=endArc[1];return}if(reverseEqualRing(endArc,arc)){arc[0]=endArc[1];arc[1]=endArc[0];return}}}if(endArcs=arcsByEnd.get(endPoint=coordinates[arc[0]+findMinimumOffset(arc)])){for(var i=0,n=endArcs.length;i&lt;n;++i){var endArc=endArcs[i];if(equalRing(endArc,arc)){arc[0]=endArc[0];arc[1]=endArc[1];return}if(reverseEqualRing(endArc,arc)){arc[0]=endArc[1];arc[1]=endArc[0];return}}}if(endArcs)endArcs.push(arc);else arcsByEnd.set(endPoint,[arc]);arcs.push(arc)}function equalLine(arcA,arcB){var ia=arcA[0],ib=arcB[0],ja=arcA[1],jb=arcB[1];if(ia-ja!==ib-jb)return false;for(;ia&lt;=ja;++ia,++ib)if(!equalPoint(coordinates[ia],coordinates[ib]))return false;return true}function reverseEqualLine(arcA,arcB){var ia=arcA[0],ib=arcB[0],ja=arcA[1],jb=arcB[1];if(ia-ja!==ib-jb)return false;for(;ia&lt;=ja;++ia,--jb)if(!equalPoint(coordinates[ia],coordinates[jb]))return false;return true}function equalRing(arcA,arcB){var ia=arcA[0],ib=arcB[0],ja=arcA[1],jb=arcB[1],n=ja-ia;if(n!==jb-ib)return false;var ka=findMinimumOffset(arcA),kb=findMinimumOffset(arcB);for(var i=0;i&lt;n;++i){if(!equalPoint(coordinates[ia+(i+ka)%n],coordinates[ib+(i+kb)%n]))return false}return true}function reverseEqualRing(arcA,arcB){var ia=arcA[0],ib=arcB[0],ja=arcA[1],jb=arcB[1],n=ja-ia;if(n!==jb-ib)return false;var ka=findMinimumOffset(arcA),kb=n-findMinimumOffset(arcB);for(var i=0;i&lt;n;++i){if(!equalPoint(coordinates[ia+(i+ka)%n],coordinates[jb-(i+kb)%n]))return false}return true}function findMinimumOffset(arc){var start=arc[0],end=arc[1],mid=start,minimum=mid,minimumPoint=coordinates[mid];while(++mid&lt;end){var point=coordinates[mid];if(point[0]&lt;minimumPoint[0]||point[0]===minimumPoint[0]&amp;&amp;point[1]&lt;minimumPoint[1]){minimum=mid;minimumPoint=point}}return minimum-start}return topology}},{&quot;./hashtable&quot;:30,&quot;./join&quot;:32,&quot;./point-equal&quot;:33,&quot;./point-hash&quot;:34}],29:[function(_dereq_,module,exports){module.exports=function(objects){var index=-1,lines=[],rings=[],coordinates=[];function extractGeometry(geometry){if(geometry&amp;&amp;extractGeometryType.hasOwnProperty(geometry.type))extractGeometryType[geometry.type](geometry)}var extractGeometryType={GeometryCollection:function(o){o.geometries.forEach(extractGeometry)},LineString:function(o){o.arcs=extractLine(o.coordinates);delete o.coordinates},MultiLineString:function(o){o.arcs=o.coordinates.map(extractLine);delete o.coordinates},Polygon:function(o){o.arcs=o.coordinates.map(extractRing);delete o.coordinates},MultiPolygon:function(o){o.arcs=o.coordinates.map(extractMultiRing);delete o.coordinates}};function extractLine(line){for(var i=0,n=line.length;i&lt;n;++i)coordinates[++index]=line[i];var arc={0:index-n+1,1:index};lines.push(arc);return arc}function extractRing(ring){for(var i=0,n=ring.length;i&lt;n;++i)coordinates[++index]=ring[i];var arc={0:index-n+1,1:index};rings.push(arc);return arc}function extractMultiRing(rings){return rings.map(extractRing)}for(var key in objects){extractGeometry(objects[key])}return{type:&quot;Topology&quot;,coordinates:coordinates,lines:lines,rings:rings,objects:objects}}},{}],30:[function(_dereq_,module,exports){module.exports=function(size,hash,equal){var hashtable=new Array(size=1&lt;&lt;Math.ceil(Math.log(size)/Math.LN2)),mask=size-1,free=size;function set(key,value){var index=hash(key)&amp;mask,match=hashtable[index],cycle=!index;while(match!=null){if(equal(match.key,key))return match.value=value;match=hashtable[index=index+1&amp;mask];if(!index&amp;&amp;cycle++)throw new Error(&quot;full hashtable&quot;)}hashtable[index]={key:key,value:value};--free;return value}function get(key,missingValue){var index=hash(key)&amp;mask,match=hashtable[index],cycle=!index;while(match!=null){if(equal(match.key,key))return match.value;match=hashtable[index=index+1&amp;mask];if(!index&amp;&amp;cycle++)break}return missingValue}function remove(key){var index=hash(key)&amp;mask,match=hashtable[index],cycle=!index;while(match!=null){if(equal(match.key,key)){hashtable[index]=null;match=hashtable[index=index+1&amp;mask];if(match!=null){++free;hashtable[index]=null;set(match.key,match.value)}++free;return true}match=hashtable[index=index+1&amp;mask];if(!index&amp;&amp;cycle++)break}return false}function keys(){var keys=[];for(var i=0,n=hashtable.length;i&lt;n;++i){var match=hashtable[i];if(match!=null)keys.push(match.key)}return keys}return{set:set,get:get,remove:remove,keys:keys}}},{}],31:[function(_dereq_,module,exports){var hashtable=_dereq_(&quot;./hashtable&quot;),extract=_dereq_(&quot;./extract&quot;),cut=_dereq_(&quot;./cut&quot;),dedup=_dereq_(&quot;./dedup&quot;);module.exports=function(objects){var topology=dedup(cut(extract(objects))),coordinates=topology.coordinates,indexByArc=hashtable(topology.arcs.length,hashArc,equalArc);objects=topology.objects;topology.arcs=topology.arcs.map(function(arc,i){indexByArc.set(arc,i);return coordinates.slice(arc[0],arc[1]+1)});delete topology.coordinates;coordinates=null;function indexGeometry(geometry){if(geometry&amp;&amp;indexGeometryType.hasOwnProperty(geometry.type))indexGeometryType[geometry.type](geometry)}var indexGeometryType={GeometryCollection:function(o){o.geometries.forEach(indexGeometry)},LineString:function(o){o.arcs=indexArcs(o.arcs)},MultiLineString:function(o){o.arcs=o.arcs.map(indexArcs)},Polygon:function(o){o.arcs=o.arcs.map(indexArcs)},MultiPolygon:function(o){o.arcs=o.arcs.map(indexMultiArcs)}};function indexArcs(arc){var indexes=[];do{var index=indexByArc.get(arc);indexes.push(arc[0]&lt;arc[1]?index:~index)}while(arc=arc.next);return indexes}function indexMultiArcs(arcs){return arcs.map(indexArcs)}for(var key in objects){indexGeometry(objects[key])}return topology};function hashArc(arc){var i=arc[0],j=arc[1],t;if(j&lt;i)t=i,i=j,j=t;return i+31*j}function equalArc(arcA,arcB){var ia=arcA[0],ja=arcA[1],ib=arcB[0],jb=arcB[1],t;if(ja&lt;ia)t=ia,ia=ja,ja=t;if(jb&lt;ib)t=ib,ib=jb,jb=t;return ia===ib&amp;&amp;ja===jb}},{&quot;./cut&quot;:27,&quot;./dedup&quot;:28,&quot;./extract&quot;:29,&quot;./hashtable&quot;:30}],32:[function(_dereq_,module,exports){var hashtable=_dereq_(&quot;./hashtable&quot;),hashPoint=_dereq_(&quot;./point-hash&quot;),equalPoint=_dereq_(&quot;./point-equal&quot;);module.exports=function(topology){var coordinates=topology.coordinates,lines=topology.lines,rings=topology.rings,visitedByPoint,neighborsByPoint=hashtable(coordinates.length,hashPoint,equalPoint),junctionByPoint=hashtable(coordinates.length,hashPoint,equalPoint);for(var i=0,n=lines.length;i&lt;n;++i){var line=lines[i],lineStart=line[0],lineEnd=line[1],previousPoint=null,currentPoint=coordinates[lineStart],nextPoint=coordinates[++lineStart];visitedByPoint=hashtable(lineEnd-lineStart,hashPoint,equalPoint);junctionByPoint.set(currentPoint,true);while(++lineStart&lt;=lineEnd){sequence(previousPoint=currentPoint,currentPoint=nextPoint,nextPoint=coordinates[lineStart])}junctionByPoint.set(nextPoint,true)}for(var i=0,n=rings.length;i&lt;n;++i){var ring=rings[i],ringStart=ring[0]+1,ringEnd=ring[1],previousPoint=coordinates[ringEnd-1],currentPoint=coordinates[ringStart-1],nextPoint=coordinates[ringStart];visitedByPoint=hashtable(ringEnd-ringStart+1,hashPoint,equalPoint);sequence(previousPoint,currentPoint,nextPoint);while(++ringStart&lt;=ringEnd){sequence(previousPoint=currentPoint,currentPoint=nextPoint,nextPoint=coordinates[ringStart])}}function sequence(previousPoint,currentPoint,nextPoint){if(visitedByPoint.get(currentPoint))return;visitedByPoint.set(currentPoint,true);var neighbors=neighborsByPoint.get(currentPoint);if(neighbors){if(!(equalPoint(neighbors[0],previousPoint)&amp;&amp;equalPoint(neighbors[1],nextPoint))&amp;&amp;!(equalPoint(neighbors[0],nextPoint)&amp;&amp;equalPoint(neighbors[1],previousPoint))){junctionByPoint.set(currentPoint,true)}}else{neighborsByPoint.set(currentPoint,[previousPoint,nextPoint])}}return junctionByPoint}},{&quot;./hashtable&quot;:30,&quot;./point-equal&quot;:33,&quot;./point-hash&quot;:34}],33:[function(_dereq_,module,exports){module.exports=function(pointA,pointB){return pointA[0]===pointB[0]&amp;&amp;pointA[1]===pointB[1]}},{}],34:[function(_dereq_,module,exports){var hashBuffer=new ArrayBuffer(8),hashFloats=new Float64Array(hashBuffer),hashInts=new Int32Array(hashBuffer);function hashFloat(x){hashFloats[0]=x;x=hashInts[1]^hashInts[0];x^=x&gt;&gt;&gt;20^x&gt;&gt;&gt;12;x^=x&gt;&gt;&gt;7^x&gt;&gt;&gt;4;return x}module.exports=function(point){var h=hashFloat(point[0])+31*hashFloat(point[1])|0;return h&lt;0?~h:h}},{}],35:[function(_dereq_,module,exports){module.exports=function(objects,propertyTransform){if(arguments.length&lt;2)propertyTransform=function(){};function transformObject(object){if(object&amp;&amp;transformObjectType.hasOwnProperty(object.type))transformObjectType[object.type](object)}function transformFeature(feature){if(feature.properties){var properties0=feature.properties,properties1={},empty=true;for(var key0 in properties0){if(propertyTransform(properties1,key0,properties0[key0])){empty=false}}if(empty)delete feature.properties;else feature.properties=properties1}}var transformObjectType={Feature:transformFeature,FeatureCollection:function(collection){collection.features.forEach(transformFeature)}};for(var key in objects){transformObject(objects[key])}return objects}},{}],36:[function(_dereq_,module,exports){module.exports=function(types){for(var type in typeDefaults){if(!(type in types)){types[type]=typeDefaults[type]}}types.defaults=typeDefaults;return types};var typeDefaults={Feature:function(feature){if(feature.geometry)this.geometry(feature.geometry)},FeatureCollection:function(collection){var features=collection.features,i=-1,n=features.length;while(++i&lt;n)this.Feature(features[i])},GeometryCollection:function(collection){var geometries=collection.geometries,i=-1,n=geometries.length;while(++i&lt;n)this.geometry(geometries[i])},LineString:function(lineString){this.line(lineString.coordinates)},MultiLineString:function(multiLineString){var coordinates=multiLineString.coordinates,i=-1,n=coordinates.length;while(++i&lt;n)this.line(coordinates[i])},MultiPoint:function(multiPoint){var coordinates=multiPoint.coordinates,i=-1,n=coordinates.length;while(++i&lt;n)this.point(coordinates[i])},MultiPolygon:function(multiPolygon){var coordinates=multiPolygon.coordinates,i=-1,n=coordinates.length;while(++i&lt;n)this.polygon(coordinates[i])},Point:function(point){this.point(point.coordinates)},Polygon:function(polygon){this.polygon(polygon.coordinates)},object:function(object){return object==null?null:typeObjects.hasOwnProperty(object.type)?this[object.type](object):this.geometry(object)},geometry:function(geometry){return geometry==null?null:typeGeometries.hasOwnProperty(geometry.type)?this[geometry.type](geometry):null},point:function(){},line:function(coordinates){var i=-1,n=coordinates.length;while(++i&lt;n)this.point(coordinates[i])},polygon:function(coordinates){var i=-1,n=coordinates.length;while(++i&lt;n)this.line(coordinates[i])}};var typeGeometries={LineString:1,MultiLineString:1,MultiPoint:1,MultiPolygon:1,Point:1,Polygon:1,GeometryCollection:1};var typeObjects={Feature:1,FeatureCollection:1}},{}],37:[function(_dereq_,module,exports){!function(){var topojson={version:&quot;1.4.6&quot;,mesh:mesh,feature:featureOrCollection,neighbors:neighbors,presimplify:presimplify};function merge(topology,arcs){var fragmentByStart={},fragmentByEnd={};arcs.forEach(function(i){var e=ends(i),start=e[0],end=e[1],f,g;if(f=fragmentByEnd[start]){delete fragmentByEnd[f.end];f.push(i);f.end=end;if(g=fragmentByStart[end]){delete fragmentByStart[g.start];var fg=g===f?f:f.concat(g);fragmentByStart[fg.start=f.start]=fragmentByEnd[fg.end=g.end]=fg}else if(g=fragmentByEnd[end]){delete fragmentByStart[g.start];delete fragmentByEnd[g.end];var fg=f.concat(g.map(function(i){return~i}).reverse());fragmentByStart[fg.start=f.start]=fragmentByEnd[fg.end=g.start]=fg}else{fragmentByStart[f.start]=fragmentByEnd[f.end]=f}}else if(f=fragmentByStart[end]){delete fragmentByStart[f.start];f.unshift(i);f.start=start;if(g=fragmentByEnd[start]){delete fragmentByEnd[g.end];var gf=g===f?f:g.concat(f);fragmentByStart[gf.start=g.start]=fragmentByEnd[gf.end=f.end]=gf}else if(g=fragmentByStart[start]){delete fragmentByStart[g.start];delete fragmentByEnd[g.end];var gf=g.map(function(i){return~i}).reverse().concat(f);fragmentByStart[gf.start=g.end]=fragmentByEnd[gf.end=f.end]=gf}else{fragmentByStart[f.start]=fragmentByEnd[f.end]=f}}else if(f=fragmentByStart[start]){delete fragmentByStart[f.start];f.unshift(~i);f.start=end;if(g=fragmentByEnd[end]){delete fragmentByEnd[g.end];var gf=g===f?f:g.concat(f);fragmentByStart[gf.start=g.start]=fragmentByEnd[gf.end=f.end]=gf}else if(g=fragmentByStart[end]){delete fragmentByStart[g.start];delete fragmentByEnd[g.end];var gf=g.map(function(i){return~i}).reverse().concat(f);fragmentByStart[gf.start=g.end]=fragmentByEnd[gf.end=f.end]=gf}else{fragmentByStart[f.start]=fragmentByEnd[f.end]=f}}else if(f=fragmentByEnd[end]){delete fragmentByEnd[f.end];f.push(~i);f.end=start;if(g=fragmentByEnd[start]){delete fragmentByStart[g.start];var fg=g===f?f:f.concat(g);fragmentByStart[fg.start=f.start]=fragmentByEnd[fg.end=g.end]=fg}else if(g=fragmentByStart[start]){delete fragmentByStart[g.start];delete fragmentByEnd[g.end];var fg=f.concat(g.map(function(i){return~i}).reverse());fragmentByStart[fg.start=f.start]=fragmentByEnd[fg.end=g.start]=fg}else{fragmentByStart[f.start]=fragmentByEnd[f.end]=f}}else{f=[i];fragmentByStart[f.start=start]=fragmentByEnd[f.end=end]=f}});function ends(i){var arc=topology.arcs[i],p0=arc[0],p1=[0,0];arc.forEach(function(dp){p1[0]+=dp[0],p1[1]+=dp[1]});return[p0,p1]}var fragments=[];for(var k in fragmentByEnd)fragments.push(fragmentByEnd[k]);return fragments}function mesh(topology,o,filter){var arcs=[];if(arguments.length&gt;1){var geomsByArc=[],geom;function arc(i){if(i&lt;0)i=~i;(geomsByArc[i]||(geomsByArc[i]=[])).push(geom)}function line(arcs){arcs.forEach(arc)}function polygon(arcs){arcs.forEach(line)}function geometry(o){if(o.type===&quot;GeometryCollection&quot;)o.geometries.forEach(geometry);else if(o.type in geometryType){geom=o;geometryType[o.type](o.arcs)}}var geometryType={LineString:line,MultiLineString:polygon,Polygon:polygon,MultiPolygon:function(arcs){arcs.forEach(polygon)}};geometry(o);geomsByArc.forEach(arguments.length&lt;3?function(geoms,i){arcs.push(i)}:function(geoms,i){if(filter(geoms[0],geoms[geoms.length-1]))arcs.push(i)})}else{for(var i=0,n=topology.arcs.length;i&lt;n;++i)arcs.push(i)}return object(topology,{type:&quot;MultiLineString&quot;,arcs:merge(topology,arcs)})}function featureOrCollection(topology,o){return o.type===&quot;GeometryCollection&quot;?{type:&quot;FeatureCollection&quot;,features:o.geometries.map(function(o){return feature(topology,o)})}:feature(topology,o)}function feature(topology,o){var f={type:&quot;Feature&quot;,id:o.id,properties:o.properties||{},geometry:object(topology,o)};if(o.id==null)delete f.id;return f}function object(topology,o){var absolute=transformAbsolute(topology.transform),arcs=topology.arcs;function arc(i,points){if(points.length)points.pop();for(var a=arcs[i&lt;0?~i:i],k=0,n=a.length,p;k&lt;n;++k){points.push(p=a[k].slice());absolute(p,k)}if(i&lt;0)reverse(points,n)}function point(p){p=p.slice();absolute(p,0);return p}function line(arcs){var points=[];for(var i=0,n=arcs.length;i&lt;n;++i)arc(arcs[i],points);if(points.length&lt;2)points.push(points[0].slice());return points}function ring(arcs){var points=line(arcs);while(points.length&lt;4)points.push(points[0].slice());return points}function polygon(arcs){return arcs.map(ring)}function geometry(o){var t=o.type;return t===&quot;GeometryCollection&quot;?{type:t,geometries:o.geometries.map(geometry)}:t in geometryType?{type:t,coordinates:geometryType[t](o)}:null}var geometryType={Point:function(o){return point(o.coordinates)},MultiPoint:function(o){return o.coordinates.map(point)},LineString:function(o){return line(o.arcs)},MultiLineString:function(o){return o.arcs.map(line)},Polygon:function(o){return polygon(o.arcs)},MultiPolygon:function(o){return o.arcs.map(polygon)}};return geometry(o)}function reverse(array,n){var t,j=array.length,i=j-n;while(i&lt;--j)t=array[i],array[i++]=array[j],array[j]=t}function bisect(a,x){var lo=0,hi=a.length;while(lo&lt;hi){var mid=lo+hi&gt;&gt;&gt;1;if(a[mid]&lt;x)lo=mid+1;else hi=mid}return lo}function neighbors(objects){var indexesByArc={},neighbors=objects.map(function(){return[]});function line(arcs,i){arcs.forEach(function(a){if(a&lt;0)a=~a;var o=indexesByArc[a];if(o)o.push(i);else indexesByArc[a]=[i]})}function polygon(arcs,i){arcs.forEach(function(arc){line(arc,i)})}function geometry(o,i){if(o.type===&quot;GeometryCollection&quot;)o.geometries.forEach(function(o){geometry(o,i)});else if(o.type in geometryType)geometryType[o.type](o.arcs,i)}var geometryType={LineString:line,MultiLineString:polygon,Polygon:polygon,MultiPolygon:function(arcs,i){arcs.forEach(function(arc){polygon(arc,i)})}};objects.forEach(geometry);for(var i in indexesByArc){for(var indexes=indexesByArc[i],m=indexes.length,j=0;j&lt;m;++j){for(var k=j+1;k&lt;m;++k){var ij=indexes[j],ik=indexes[k],n;if((n=neighbors[ij])[i=bisect(n,ik)]!==ik)n.splice(i,0,ik);if((n=neighbors[ik])[i=bisect(n,ij)]!==ij)n.splice(i,0,ij)}}}return neighbors}function presimplify(topology,triangleArea){var absolute=transformAbsolute(topology.transform),relative=transformRelative(topology.transform),heap=minHeap(compareArea),maxArea=0,triangle;if(!triangleArea)triangleArea=cartesianArea;topology.arcs.forEach(function(arc){var triangles=[];arc.forEach(absolute);for(var i=1,n=arc.length-1;i&lt;n;++i){triangle=arc.slice(i-1,i+2);triangle[1][2]=triangleArea(triangle);triangles.push(triangle);heap.push(triangle)}arc[0][2]=arc[n][2]=Infinity;for(var i=0,n=triangles.length;i&lt;n;++i){triangle=triangles[i];triangle.previous=triangles[i-1];triangle.next=triangles[i+1]}});while(triangle=heap.pop()){var previous=triangle.previous,next=triangle.next;if(triangle[1][2]&lt;maxArea)triangle[1][2]=maxArea;else maxArea=triangle[1][2];if(previous){previous.next=next;previous[2]=triangle[2];update(previous)}if(next){next.previous=previous;next[0]=triangle[0];update(next)}}topology.arcs.forEach(function(arc){arc.forEach(relative)});function update(triangle){heap.remove(triangle);triangle[1][2]=triangleArea(triangle);heap.push(triangle)}return topology}function cartesianArea(triangle){return Math.abs((triangle[0][0]-triangle[2][0])*(triangle[1][1]-triangle[0][1])-(triangle[0][0]-triangle[1][0])*(triangle[2][1]-triangle[0][1]))}function compareArea(a,b){return a[1][2]-b[1][2]}function minHeap(compare){var heap={},array=[];heap.push=function(){for(var i=0,n=arguments.length;i&lt;n;++i){var object=arguments[i];up(object.index=array.push(object)-1)}return array.length};heap.pop=function(){var removed=array[0],object=array.pop();if(array.length){array[object.index=0]=object;down(0)}return removed};heap.remove=function(removed){var i=removed.index,object=array.pop();if(i!==array.length){array[object.index=i]=object;(compare(object,removed)&lt;0?up:down)(i)}return i};function up(i){var object=array[i];while(i&gt;0){var up=(i+1&gt;&gt;1)-1,parent=array[up];if(compare(object,parent)&gt;=0)break;array[parent.index=i]=parent;array[object.index=i=up]=object}}function down(i){var object=array[i];while(true){var right=i+1&lt;&lt;1,left=right-1,down=i,child=array[down];if(left&lt;array.length&amp;&amp;compare(array[left],child)&lt;0)child=array[down=left];if(right&lt;array.length&amp;&amp;compare(array[right],child)&lt;0)child=array[down=right];if(down===i)break;array[child.index=i]=child;array[object.index=i=down]=object}}return heap}function transformAbsolute(transform){if(!transform)return noop;</div><div class='line' id='LC3'>var x0,y0,kx=transform.scale[0],ky=transform.scale[1],dx=transform.translate[0],dy=transform.translate[1];return function(point,i){if(!i)x0=y0=0;point[0]=(x0+=point[0])*kx+dx;point[1]=(y0+=point[1])*ky+dy}}function transformRelative(transform){if(!transform)return noop;var x0,y0,kx=transform.scale[0],ky=transform.scale[1],dx=transform.translate[0],dy=transform.translate[1];return function(point,i){if(!i)x0=y0=0;var x1=(point[0]-dx)/kx|0,y1=(point[1]-dy)/ky|0;point[0]=x1-x0;point[1]=y1-y0;x0=x1;y0=y1}}function noop(){}if(typeof define===&quot;function&quot;&amp;&amp;define.amd)define(topojson);else if(typeof module===&quot;object&quot;&amp;&amp;module.exports)module.exports=topojson;else this.topojson=topojson}()},{}],38:[function(_dereq_,module,exports){module.exports=parse;function parse(_){var i=0;function $(re){var match=_.substring(i).match(re);if(!match)return null;else{i+=match[0].length;return match[0]}}function white(){$(/^\s*/)}function multicoords(){white();var depth=0,rings=[],pointer=rings,elem;while(elem=$(/^(\()/)||$(/^(\))/)||$(/^(\,)/)||coords()){if(elem==&quot;(&quot;){depth++}else if(elem==&quot;)&quot;){depth--;if(depth==0)break}else if(elem&amp;&amp;Array.isArray(elem)&amp;&amp;elem.length){pointer.push(elem)}else if(elem===&quot;,&quot;){}white()}if(depth!==0)return null;return rings}function coords(){var list=[],item,pt;while(pt=$(/^[-+]?([0-9]*\.[0-9]+|[0-9]+)/)||$(/^(\,)/)){if(pt==&quot;,&quot;){list.push(item);item=[]}else{if(!item)item=[];item.push(parseFloat(pt))}white()}if(item)list.push(item);return list.length?list:null}function point(){if(!$(/^(point)/i))return null;white();if(!$(/^(\()/))return null;var c=coords();white();if(!$(/^(\))/))return null;return{type:&quot;Point&quot;,coordinates:c[0]}}function multipoint(){if(!$(/^(multipoint)/i))return null;white();var c=multicoords();white();return{type:&quot;MultiPoint&quot;,coordinates:c[0]}}function multilinestring(){if(!$(/^(multilinestring)/i))return null;white();var c=multicoords();white();return{type:&quot;MultiLineString&quot;,coordinates:c}}function linestring(){if(!$(/^(linestring)/i))return null;white();if(!$(/^(\()/))return null;var c=coords();if(!$(/^(\))/))return null;return{type:&quot;LineString&quot;,coordinates:c}}function polygon(){if(!$(/^(polygon)/i))return null;white();return{type:&quot;Polygon&quot;,coordinates:multicoords()}}function multipolygon(){if(!$(/^(multipolygon)/i))return null;white();return{type:&quot;MultiPolygon&quot;,coordinates:multicoords()}}function geometrycollection(){var geometries=[],geometry;if(!$(/^(geometrycollection)/i))return null;white();if(!$(/^(\()/))return null;while(geometry=root()){geometries.push(geometry);white();$(/^(\,)/);white()}if(!$(/^(\))/))return null;return{type:&quot;GeometryCollection&quot;,geometries:geometries}}function root(){return point()||linestring()||polygon()||multipoint()||multilinestring()||multipolygon()||geometrycollection()}return root()}},{}]},{},[1])(1)});</div></pre></div></td>
          </tr>
        </table>
  </div>

  </div>
</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="http://developer.github.com">API</a></li>
      <li><a href="http://training.github.com">Training</a></li>
      <li><a href="http://shop.github.com">Shop</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/about">About</a></li>

    </ul>

    <a href="/">
      <span class="mega-octicon octicon-mark-github" title="GitHub"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2014 <span title="0.05890s from github-fe121-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="/site/terms">Terms</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
        <li><a href="/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="fullscreen-contents js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped tooltipped-w" aria-label="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped tooltipped-w"
      aria-label="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-remove-close close js-ajax-error-dismiss"></a>
      Something went wrong with that request. Please try again.
    </div>

  </body>
</html>

